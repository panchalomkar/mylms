{"version":3,"file":"coursecategory.min.js","sources":["../src/coursecategory.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable no-unused-vars */\n/* eslint-disable babel/semi */\n/* eslint-disable no-trailing-spaces*/\n/* eslint-disable promise/catch-or-return*/\n\n/* eslint-disable no-undef*/\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     theme_remui/coursecategory\n * @copyright (c) 2023 WisdmLabs (https://wisdmlabs.com/)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'core/templates',\n    'theme_remui/jquery-toolbar',\n    'core/notification',\n    'theme_remui/user/repository',\n    'theme_remui/bootstrap-select'\n], function($, Ajax, str, templates, toolbar, Notification,UserRepository) {\n\n    // Globals.\n    var filterobj;\n    var langstrings;\n\n    var categoryfilter = $('#categoryfilter');\n\n    var sortfilter = $('select#sortfilter');\n\n    var categorylink = '[category-filter-link]';\n\n    var cardswrapperarea = $('.course-cards');\n    var cardspagination = $('.cards-pagination');\n\n    // View templates.\n    var gridtemplate = 'theme_remui/course_card_grid';\n    var listtemplate = 'theme_remui/course_card_list';\n    var summarytemplate = 'theme_remui/course_card_summary';\n\n    var searchfilter = $('.layout-1 .filters-wrapper .simplesearchform');\n\n\n    var coursecounter = $('.course-counter span.course-number');\n\n    var tagswrapper = $('.tag-wrapper');\n\n    var togglebtn = $(\".togglebtn\");\n\n    var courseArchieveFilters = {};\n\n    const SELECTORS = {\n        'CUSTOM_DROPDOWN_MENU': '.edw-custom-dropdown-wrapper .dropdown-menu',\n        'COURSE_SORTING': '.edw-custom-dropdown-wrapper.course-shorting',\n        'COURSE_FILTERS': '.edw-custom-dropdown-wrapper.course-filters',\n        'MAX_COURSE_SHOWN': '.edw-custom-dropdown-wrapper.max-course-shown',\n        'COURSE_FILTER_FORM': '.edw-custom-dropdown-wrapper #course-filter-form',\n        'MAXCOURSE_DEFAULT': '.edw-custom-dropdown-wrapper.max-course-shown .max-course-default',\n    };\n\n    /**\n     * Main category filters class.\n     * @param  {Integer} defaultCategory Default category to select.\n     * @return {Object}  Filter object\n     */\n    var categoryFilters = function(defaultCategory) {\n\n        var _pageobj = {courses: 0, mycourses: 0};\n        var _obj = {\n            // Category id.\n            category: defaultCategory,\n            // Sorting.\n            sort: 'ASC',\n            // Searching string.\n            search: \"\",\n            // If true, means mycourses tab is active.\n            tab: false,\n            // This object consist of page number that is currently active, has mycourses and all courses tab page number.\n            page: _pageobj,\n            // If True, regenerate the pagination on any action performed.\n            pagination: true,\n            // Initially it is null to detect initial change in view, String grid - view in grid format, String list - list format.\n            // view: null,\n            // This filterModified true will tell that we need to fetch the courses otherwise show old fetched data.\n            isFilterModified: true\n        };\n\n        _obj.initAttributes = function() {\n            _obj.category = defaultCategory;\n            _obj.sort = 'ASC';\n            _obj.search = '';\n            _obj.tab = false;\n            _obj.page = _pageobj;\n            _obj.pagination = true;\n            // _obj.view = null;\n            _obj.isFilterModified = true;\n        };\n\n        _obj.initPagination = function() {\n            _obj.page = {courses: 0, mycourses: 0};\n        };\n        return _obj;\n    };\n\n    /**\n     * Course content object to handle ajax.\n     */\n    var courseContent = new (function() {\n        this.mycourses = false;\n        this.courses = false;\n\n        /**\n         * Check if course contents are loaded.\n         * @returns {Boolean}\n         */\n        this.isLoaded = function() {\n            let type = courseContent.getActive();\n            return this[type];\n        };\n\n        /**\n         * Mark courses as loaded\n         * @param {Boolean} state Loading state\n         */\n        this.loaded = function(state) {\n            let type = courseContent.getActive();\n            if (state === undefined) {\n                state = true;\n            }\n            this[type] = state;\n        };\n\n        /**\n         * Reset courses.\n         */\n        this.reset = function() {\n            this.mycourses = false;\n            this.courses = false;\n        };\n\n        /**\n         * Get currently active tab\n         * @returns {String}\n         */\n        this.getActive = function() {\n            return filterobj.tab === true ? 'mycourses' : 'courses';\n        };\n    })();\n\n    /**\n     * Filters Generation\n     * @param  {Object} filterdata Filter data\n     */\n    function generateFilters(filterdata) {\n        $(\".selectpicker\").each(function() {\n            $(this).selectpicker();\n        });\n\n        if (filterdata.category !== \"\") {\n\n\n            if ($.isNumeric(filterdata.category)) {\n                var targetElement = $('.categoryfiltermenu .dropdown-menu a[data-cat-id=\"' + filterdata.category + '\"]');\n                $('.categoryfiltermenu .categoryfilter span').text(targetElement.text());\n            }\n        }\n\n        if (filterdata.tab == true) {\n            $('#switch-label1, #switch-label2').prop('checked', true);\n        } else {\n            $('#switch-label1, #switch-label2').prop('checked', false);\n        }\n        if (filterdata.sort !== null && filterdata.sort != undefined && typeof filterdata.sort != \"function\") {\n            $(\"#sortfilter.selectpicker\").selectpicker('val', filterdata.sort);\n        }\n\n        if (filterdata.search !== \"\") {\n            $(searchfilter).find('input[type=\"text\"]').val(filterdata.search);\n        }\n\n    }\n\n    /**\n     * Update page content\n     */\n    function updatePage() {\n        // Destroy the cards from page.\n        destroyCourseCards();\n        // Create courses cards again.\n        generateCourseCards();\n    }\n\n    /*\n     * Populate the tags section.\n     */\n    function populate_tags() {\n        var serviceName = 'theme_remui_get_tags';\n        var getcourses = Ajax.call([{\n            methodname: serviceName,\n            args: {\n                data: JSON.stringify(filterobj)\n            }\n        }]);\n        getcourses[0].done(function(response) {\n            tagswrapper.empty().append(response);\n            generateHorizontalScroller($(\".tag_list\"));\n\n        }).fail(Notification.exception);\n    }\n\n    const generateHorizontalScroller = (element) => {\n        const _leftscroll = \".left-scroll\";\n        const _rightscroll = \".right-scroll\";\n\n        if (element.length == 0) {\n            return;\n        }\n\n        const _main = element[0];\n\n        if (_main.scrollWidth > _main.clientWidth) {\n\n            $(_leftscroll + \",\" + _rightscroll).removeClass(\"d-none\");\n\n            const updateButtons = () => {\n\n                $(_leftscroll).disabled = false;\n                $(_rightscroll).disabled = false;\n\n                if (_main.scrollLeft == 0) {\n                    $(_leftscroll).disabled = true;\n                }\n\n                var _scrollWidth = _main.scrollWidth;\n                var _clientWidth = _main.clientWidth;\n                var _scrollLeft = _main.scrollLeft;\n                var _rightPos = _scrollWidth - _clientWidth;\n                // Here we detect if element if fully scrolled to right.\n                if (_scrollLeft == _rightPos) {\n                    $(_leftscroll).disabled = true;\n                }\n            };\n\n            const moveRight = (_ele, scrollStep = 30) => {\n                _ele.scrollLeft += scrollStep;\n                updateButtons();\n            };\n\n            const moveLeft = (_ele, scrollStep = 30) => {\n                _ele.scrollLeft -= scrollStep;\n                updateButtons();\n            };\n\n            var _lInterval;\n            var _rInterval;\n\n            $(_leftscroll).on(\"mouseover\", function() {\n                _lInterval = setInterval(function() {\n                    moveLeft(_main, 1);\n                }, 1);\n\n            });\n\n            $(_rightscroll).on(\"mouseover\", function() {\n                _rInterval = setInterval(function() {\n                    moveRight(_main, 1);\n                }, 1);\n            });\n\n            $(_leftscroll).on(\"mouseout\", function() {\n                clearInterval(_lInterval);\n            });\n            $(_rightscroll).on(\"mouseout\", function() {\n                clearInterval(_rInterval);\n            });\n        }\n    };\n\n    /**\n     * Course cards initialization function.\n     */\n    function generateCourseCards() {\n        // Check if Filters are modified and need to fetch the courses.\n        if (!filterobj.isFilterModified) {\n            return;\n        }\n        toggleContent(true);\n\n        // Fetch the courses.\n        getCourses();\n\n\n    }\n\n    /**\n     * Hide the content.\n     * @param  {Boolean} hidecontent\n     */\n    function toggleContent(hidecontent) {\n        if (hidecontent) {\n            $(\"#course-archive-main-container .tag-wrapper\").addClass(\"d-none\");\n            $(\"#course-archive-main-container .course-cards\").addClass(\"d-none\");\n            $(\"#course-archive-main-container .cards-pagination\").addClass(\"d-none\");\n            $(\"#course-archive-main-container .loader-overlay\").addClass(\"d-flex\").removeClass(\"d-none\");\n        } else {\n            $(\"#course-archive-main-container .tag-wrapper\").removeClass(\"d-none\");\n            $(\"#course-archive-main-container .course-cards\").removeClass(\"d-none\");\n            $(\"#course-archive-main-container .cards-pagination\").removeClass(\"d-none\");\n            $(\"#course-archive-main-container .loader-overlay\").addClass(\"d-none\").removeClass(\"d-flex\");\n        }\n    }\n    /**\n     * Destroy courses cards\n     */\n    function destroyCourseCards() {\n        // Find active tab to append the course cards.\n        // var destroytab = (filterobj.tab) ? mycoursesregion : coursesregion;\n        // Empty the courses region.\n        $(cardswrapperarea).empty();\n\n        // Destroy the pagination also.\n        if (filterobj.pagination) {\n            // Var destroypagination = (filterobj.tab) ? mycoursespagination : coursespagination;\n            // $(destroypagination).empty();\n            cardspagination.empty();\n        }\n    }\n\n    /**\n     * Ajax to fetch the course and also append those courses to the page.\n     * If pagination is enabled it will also generate new pagination.\n     */\n    function getCourses() {\n        $('.courses-tabs .courses-loader-wrap').show();\n        // Find active tab to append the course cards.\n        // var appendtab = (filterobj.tab) ? mycoursesregion : coursesregion;\n        // var appendpagination = (filterobj.tab) ? mycoursespagination : coursespagination;\n        var serviceName = 'theme_remui_get_courses';\n        var getcourses = Ajax.call([{\n            methodname: serviceName,\n            args: {\n                data: JSON.stringify(filterobj)\n            }\n        }]);\n        getcourses[0].done(function(response) {\n            response = JSON.parse(response);\n\n            $(coursecounter).text(response.totalcoursescount);\n\n            // Get the view.\n            var viewobj = (typeof filterobj.view === \"undefined\") ? response.view : filterobj.view;\n\n            // It will handle the view buttons synchronization with myoverview settings\n            var filterbuttonsarray = $('.filters-wrapper .view-buttons .btn');\n            var prefveiwbuttonavailable = filterbuttonsarray.filter(function() {\n                return $(this).attr('data-view') == viewobj;\n            }).length > 0;\n            if (!prefveiwbuttonavailable) {\n                if (filterbuttonsarray.length >= 1) {\n                    viewobj = $(filterbuttonsarray[0]).attr('data-view');\n                }\n            }\n            var rendertemplate = gridtemplate;\n\n            if (viewobj == 'grid' || response.latest_card) {\n                rendertemplate = gridtemplate;\n            }\n            if (viewobj == 'list' || response.latest_card) {\n                rendertemplate = listtemplate;\n            }\n            if (viewobj == 'summary' || response.latest_card) {\n                rendertemplate = summarytemplate;\n            }\n\n            // Always render grid teplate on mobile screen and when latest cards setting is on.\n            if (window.screen.width <= 480 || response.latest_card) {\n                rendertemplate = gridtemplate;\n                viewobj = 'grid';\n            }\n\n            if (prefveiwbuttonavailable) {\n                // Update the view.\n                updateView(viewobj);\n            } else {\n                // Update the card container.\n                updateCardContainer(viewobj);\n            }\n            updateCards(response.latest_card);\n\n            var courses = response.courses;\n            if (courses.length > 0) {\n                for (var i = 0; i < courses.length; i++) {\n                    // This will call the function to load and render our template.\n                    templates.render(rendertemplate, courses[i])\n                    // It returns a promise that needs to be resoved.\n                    /* eslint no-loop-func: 0 */\n                    .then(function(html, js) {\n                        // Here eventually I have my compiled template, and any javascript that it generated.\n                        // The templates object has append, prepend and replace functions.\n                        // templates.appendNodeContents(appendtab, html, js);\n                        templates.appendNodeContents(cardswrapperarea, html, js);\n\n                        // Show options button on course card.\n                        // check if not mycourse tab.\n                        // This is very bad code, couldn't do it another way.\n                        // it get called each time a single card is added to dom, try to improve it.\n                        if (!filterobj.tab && !response.latest_card) {\n                            /* eslint promise/always-return: 0 */\n                            $('.showoptions').each(function() {\n                                $(this).toolbar({\n                                    content: $(this).data('toolbar'),\n                                    style: 'primary'\n                                });\n                            });\n                        }\n                    }).fail(Notification.exception);\n                }\n\n                $(SELECTORS.COURSE_SORTING).removeClass(\"d-none\");\n                $(SELECTORS.MAX_COURSE_SHOWN).removeClass(\"d-none\");\n\n            } else {\n                var htmldata = '<div class=\"alert alert-warning alert-dismissible  w-full mx-10\" role=\"alert\">';\n                htmldata += '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\n                    '<span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>' + langstrings[0] + '</div>';\n\n                $(SELECTORS.COURSE_SORTING).addClass(\"d-none\");\n                $(SELECTORS.MAX_COURSE_SHOWN).addClass(\"d-none\");\n\n                templates.appendNodeContents(cardswrapperarea, htmldata, '');\n\n            }\n\n            // Pagination html.\n            // Check if pagination is enabled.\n            if (filterobj.pagination) {\n                templates.appendNodeContents(cardspagination, response.pagination, '');\n            }\n            $('.courses-tabs .courses-loader-wrap').hide();\n            toggleContent(false);\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Update cards view\n     * @param  {Boolean} latest True if want to show as latest card\n     */\n    function updateCards(latest) {\n        if (latest) {\n            cardswrapperarea.addClass('latest-cards');\n            $('.viewtoggler').addClass('hidden');\n        } else {\n            cardswrapperarea.removeClass('latest-cards');\n            $('.viewtoggler').removeClass('hidden');\n        }\n    }\n\n    /**\n     * Updates the view of the course cards based on the specified view type.\n     *\n     * @param {string} view - The view type to update to ('grid', 'list', or 'summary').\n     * @returns {void}\n     */\n    function updateView(view) {\n        const views = {\n            grid: 'grid-view edw-course-card-grid',\n            list: 'list-view list-group edw-course-list-container',\n            summary: 'summary-view edw-course-summary-container d-flex flex-column m-0'\n        };\n\n        const commonRemoveClasses = Object.values(views).join(' ');\n        const btnSelector = `.${view}_btn`;\n\n        cardswrapperarea\n            .removeClass(commonRemoveClasses)\n            .addClass(views[view]);\n\n        $('.grid_btn, .list_btn, .summary_btn').removeClass('btn-primary active');\n        $(btnSelector).addClass('btn-primary active');\n\n        if (view === 'grid') {\n            filterobj.view = 'grid';\n        }\n    }\n\n    /**\n     *\n     * @param  {String} view View typ\n     */\n    function updateCardContainer(view) {\n        const viewClasses = {\n            grid: 'grid-view edw-course-card-grid',\n            list: 'list-view list-group edw-course-list-container',\n            summary: 'summary-view edw-course-summary-container d-flex flex-column m-0'\n        };\n\n        const allClasses = Object.values(viewClasses).join(' ');\n\n        cardswrapperarea.removeClass(allClasses).addClass(viewClasses[view]);\n    }\n    // This is for, Toolbar redirection not working.\n    $(document).delegate('.tool-item', 'click', function() {\n        window.location = $(this).attr('href');\n    });\n\n    $(categoryfilter).on('change', function(e) {\n\n        filterobj.category = e.target.value;\n\n        var url = M.cfg.wwwroot + '/course/index.php?categoryid=' + encodeURI(e.target.value);\n\n        if (filterobj.search != \"\") {\n            url += \"&search=\" + filterobj.search;\n        }\n\n        if (filterobj.sort != \"default\" && filterobj.sort != -1 && typeof filterobj.sort != \"function\") {\n            url += \"&sort=\" + filterobj.sort;\n        }\n\n        window.history.replaceState(\n            'pagechange',\n            document.title,\n            url\n        );\n\n        window.location.reload();\n        // UpdatePage();\n        // populate_tags();\n    });\n\n    // Search Filter.\n    $(searchfilter).on('submit', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        filterobj.initPagination();\n        filterobj.search = $('#course-archive-main-container .filters-wrapper .simplesearchform input.form-control').val();\n        courseContent.reset();\n        updatePage();\n    });\n\n    $('#switch-label1, #switch-label2').on('change.bootstrapSwitch', function(e, data) {\n        filterobj.tab = e.target.checked;\n        updatePage();\n        populate_tags();\n    });\n\n    // View toggler.\n    $(togglebtn).on('click', function() {\n        var clckviewbtn = $(this).attr('data-view');\n        filterobj.view = clckviewbtn;\n        updateView(filterobj.view);\n            UserRepository.setUserPreference('course_view_state', clckviewbtn, null);\n        courseFilterCommon();\n    });\n\n    // Sorting Filter.\n    $(sortfilter).on('changed.bs.select', function(e) {\n        filterobj.sort = e.target.value;\n        updatePage();\n    });\n\n    $(\"#course-archive-main-container\").on('click', \".menu-picker-select\", function() {\n        $(this).find(\".menu-content\").toggleClass('d-none');\n        $(this).find(\".edw-icon-Setting\").toggleClass('d-none');\n        $(this).find(\".edw-icon-Cancel\").toggleClass('d-none');\n    });\n\n    // Pagination Click Event.\n    $(document).delegate('.cards-pagination .pagination .page-item .page-link', 'click', function(e) {\n        e.preventDefault();\n        // Update the page number in object for mycourses as well as all courses tab.\n        var linkdata = e.target.href;\n        if (linkdata === undefined) {\n            linkdata = e.target.parentElement.href;\n            if (linkdata === undefined) {\n                linkdata = e.target.parentElement.parentElement.href;\n            }\n        }\n\n        var hashes = linkdata.slice(linkdata.indexOf('?') + 1).split('&');\n        var vars = [],\n            hash;\n        for (var i = 0; i < hashes.length; i++) {\n            hash = hashes[i].split('=');\n            vars.push(hash[0]);\n            vars[hash[0]] = hash[1];\n        }\n\n        if (filterobj.tab) {\n            filterobj.page.mycourses = vars.page;\n        } else {\n            filterobj.page.courses = vars.page;\n            courseArchieveFilters.pageno = vars.page;\n            sessionStorage.setItem('courseArchieveFilters', JSON.stringify(courseArchieveFilters));\n        }\n\n        updatePage();\n    });\n\n    function courseFilterCommon() {\n        filterobj.page.courses = 0;\n        courseArchieveFilters.pageno = 0;\n\n        $(SELECTORS.CUSTOM_DROPDOWN_MENU).removeClass('show');\n        setCoursePerPageDetails();\n\n        sessionStorage.setItem('courseArchieveFilters', JSON.stringify(courseArchieveFilters));\n        updatePage();\n    }\n\n    function shortingSelectOption(e) {\n        $(SELECTORS.COURSE_SORTING + ' .dropdown-toggle .toggle-text').text($(this).text());\n        $(SELECTORS.COURSE_SORTING + ' .select-option').removeClass('active');\n        $(this).addClass('active');\n\n        filterobj.sort = $(this).data('value');\n\n        courseArchieveFilters.sort = $(this).data('value');\n\n        courseFilterCommon();\n    }\n\n    function maxCourseSelectOption(e) {\n        $(SELECTORS.MAX_COURSE_SHOWN + ' .dropdown-toggle .toggle-text').text($(this).text());\n        $(SELECTORS.MAX_COURSE_SHOWN + ' .select-option').removeClass('active');\n        $(this).addClass('active');\n\n        filterobj.courserowperpage = $(this).data('value');\n\n        courseArchieveFilters.courserowperpage = $(this).data('value');\n\n        courseFilterCommon();\n    }\n\n    function courseFilterFormSubmit(e) {\n        e.preventDefault();\n        var selectedFilters = getCheckedFiltersData(this);\n\n        if (Object.keys(selectedFilters).length > 0) {\n            filterobj.selectedFilters = selectedFilters;\n            filterobj.isfilterapplied = true;\n        } else {\n            filterobj.isfilterapplied = false;\n            delete filterobj.selectedFilters;\n        }\n\n        courseArchieveFilters.coursefilters = selectedFilters;\n\n        courseFilterCommon();\n    }\n\n    function courseFilterFormClear(e) {\n        $(SELECTORS.COURSE_FILTER_FORM).find('input[type=\"checkbox\"]').each(function() {\n            $(this).prop('checked', false);\n        });\n    }\n\n    function getCheckedFiltersData($filterform) {\n        var selectedFilters = {};\n        var filterCount = 0;\n        $($filterform).find('input[type=\"checkbox\"]:checked').each(function() {\n            var filterType = $(this).data('filtertype');\n            var value = $(this).val();\n            var name = $(this).attr('name');\n            filterCount++;\n\n            if (!selectedFilters[filterType]) {\n                selectedFilters[filterType] = [];\n            }\n\n            selectedFilters[filterType].push({\n                'name': name,\n                'value': value\n            });\n        });\n\n        if (filterCount) {\n            $(SELECTORS.COURSE_FILTERS + \" .filter-count-label\").removeClass('d-none').text(filterCount);\n        } else {\n            $(SELECTORS.COURSE_FILTERS + \" .filter-count-label\").addClass('d-none').text(\"\");\n        }\n\n        return selectedFilters;\n    }\n\n    function setCoursePerPageDetails() {\n        let courseperrow = 4;\n        if (typeof window === 'undefined') {\n            courseperrow = 4;\n        }\n\n        var screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n        if (screenWidth < 768) {\n            courseperrow = 1;\n        } else if (screenWidth < 1024) {\n            courseperrow = 2;\n        } else if (screenWidth < 1200 || $('body').hasClass('limitedwidth')) {\n            courseperrow = 3;\n        } else {\n            courseperrow = 4;\n        }\n\n        if (!filterobj.courserowperpage) {\n            let maxCourseDefault = $(SELECTORS.MAXCOURSE_DEFAULT).data('value');\n            let courserowperpage = Math.ceil(maxCourseDefault / courseperrow);\n            filterobj.courserowperpage = courserowperpage;\n\n            let activeOption = $(SELECTORS.MAX_COURSE_SHOWN + \" .select-option[data-value='\" + courserowperpage + \"']\");\n\n            $(SELECTORS.MAX_COURSE_SHOWN + ' .dropdown-toggle .toggle-text').text(activeOption.text());\n            $(SELECTORS.MAX_COURSE_SHOWN + ' .select-option').removeClass('active');\n            activeOption.addClass('active');\n        }\n\n        filterobj.courseperrow = courseperrow;\n    }\n\n\n    function setDefaultCourseFilters() {\n        // Retrieve filters from session storage or initialize empty object\n        courseArchieveFilters = JSON.parse(sessionStorage.getItem('courseArchieveFilters'));\n\n        let activesort = null;\n        let screenWidth = window?.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n        if (!courseArchieveFilters) {\n            // Initialize default filters if not present\n            courseArchieveFilters = {};\n\n            courseArchieveFilters.islimitedwidth = $('body').hasClass('limitedwidth');\n            courseArchieveFilters.maxCourseDefault = $(SELECTORS.MAXCOURSE_DEFAULT).data('value');\n            courseArchieveFilters.windowWidth = screenWidth;\n            courseArchieveFilters.category = filterobj.category;\n\n        } else {\n            if (courseArchieveFilters.coursefilters) {\n                // Set checked state for filter inputs\n                Object.keys(courseArchieveFilters.coursefilters).forEach(filterType => {\n                    courseArchieveFilters.coursefilters[filterType].forEach(filter => {\n                        let filterInputField = $(SELECTORS.COURSE_FILTER_FORM + \" input[name='\" + filter.name + \"']\");\n                        if (filterInputField) {\n                            filterInputField.prop('checked', true);\n                        }\n                    });\n                });\n\n\n                filterobj.selectedFilters = getCheckedFiltersData(SELECTORS.COURSE_FILTER_FORM);\n\n                if (filterobj.selectedFilters && Object.keys(filterobj.selectedFilters).length > 0) {\n                    filterobj.isfilterapplied = true;\n                }\n            }\n\n            // Set course rows per page\n            if (courseArchieveFilters.courserowperpage) {\n                let activepage = $(SELECTORS.MAX_COURSE_SHOWN + \" .select-option[data-value='\" + courseArchieveFilters.courserowperpage + \"']\");\n                $(SELECTORS.MAX_COURSE_SHOWN + ' .dropdown-toggle .toggle-text').text(activepage.text());\n                $(SELECTORS.MAX_COURSE_SHOWN + ' .select-option').removeClass('active');\n                activepage.addClass('active');\n\n                filterobj.courserowperpage = courseArchieveFilters.courserowperpage;\n            }\n\n            // Set active sort option\n            if (courseArchieveFilters.sort) {\n                activesort = $(SELECTORS.COURSE_SORTING + \" .select-option[data-value='\" + courseArchieveFilters.sort + \"']\");\n            }\n\n            // Update page number and reset if necessary\n            if (courseArchieveFilters.hasOwnProperty('pageno') || courseArchieveFilters.pageno !== undefined) {\n                filterobj.page.courses = courseArchieveFilters.pageno;\n            }\n            if (!courseArchieveFilters.courserowperpage && (courseArchieveFilters.maxCourseDefault != $(SELECTORS.MAXCOURSE_DEFAULT).data('value'))) {\n                courseArchieveFilters.maxCourseDefault = $(SELECTORS.MAXCOURSE_DEFAULT).data('value');\n                filterobj.page.courses = 0;\n                courseArchieveFilters.pageno = 0;\n            }\n\n            // Reset page if layout or screen width changed\n            if (courseArchieveFilters.islimitedwidth !== $('body').hasClass('limitedwidth') ||\n                courseArchieveFilters.windowWidth !== screenWidth) {\n                courseArchieveFilters.islimitedwidth = $('body').hasClass('limitedwidth');\n                courseArchieveFilters.windowWidth = screenWidth;\n                filterobj.page.courses = 0;\n                courseArchieveFilters.pageno = 0;\n            }\n\n            if (courseArchieveFilters.category != filterobj.category) {\n                courseArchieveFilters.category = filterobj.category;\n                filterobj.page.courses = 0;\n                courseArchieveFilters.pageno = 0;\n            }\n        }\n\n\n        // Set default sort option if not already set\n        if (!activesort || activesort.length == 0) {\n            activesort = $(SELECTORS.COURSE_SORTING + \" .select-option[data-value='none']\");\n            courseArchieveFilters.sort = 'none';\n        }\n\n        // Save filters to session storage\n        sessionStorage.setItem('courseArchieveFilters', JSON.stringify(courseArchieveFilters));\n\n        // Update UI for sorting\n        $(SELECTORS.COURSE_SORTING + ' .dropdown-toggle .toggle-text').text(activesort.text());\n        $(SELECTORS.COURSE_SORTING + ' .select-option').removeClass('active');\n        activesort.addClass('active');\n\n        setCoursePerPageDetails();\n\n        filterobj.sort = courseArchieveFilters.sort;\n    }\n\n    var init = function(defaultCategory) {\n        $(document).ready(function() {\n            var categorydescription = $(\".category-description-container\").get();\n            $(\".filters-wrapper .category-description-container\").remove();\n            $(categorydescription).insertAfter(\".header-wrapper\");\n            $(categorydescription).removeClass(\"d-none\");\n\n            // Gradient effect handling on category discription\n            var summaryheight = $('.category-description-wrapper').height();\n\n            const $container = $('.category-description-container');\n            const $wrapper = $('.category-description-wrapper');\n            const $readMore = $container.find('#readmorebtn');\n            const $readLess = $container.find('#readlessbtn');\n            if (summaryheight > 300) {\n                $readMore.removeClass('d-none');\n                $wrapper.addClass('summary-collapsed').removeClass('summary-expanded');\n            }\n            function toggleSummary(expand) {\n                $wrapper.toggleClass('summary-expanded', expand).toggleClass('summary-collapsed', !expand);\n                $readMore.toggleClass('d-none', expand);\n                $readLess.toggleClass('d-none', !expand);\n            }\n\n            $readMore.on('click', () => toggleSummary(true));\n            $readLess.on('click', () => toggleSummary(false));\n\n            $(SELECTORS.CUSTOM_DROPDOWN_MENU).on('click.bs.dropdown', function(e) {\n                e.stopPropagation();\n            });\n\n            $(SELECTORS.COURSE_SORTING + ' .select-option').on('click', shortingSelectOption);\n            $(SELECTORS.MAX_COURSE_SHOWN + ' .select-option').on('click', maxCourseSelectOption);\n\n            $(SELECTORS.COURSE_FILTER_FORM + ' .clear-btn').on('click', courseFilterFormClear);\n            $(SELECTORS.COURSE_FILTER_FORM).on('submit', courseFilterFormSubmit);\n\n            $(SELECTORS.CUSTOM_DROPDOWN_MENU + ' .dropdown-close').on('click', () => {\n                $(SELECTORS.CUSTOM_DROPDOWN_MENU).removeClass('show');\n            });\n\n            $('.categoryfiltermenu .dropdown-menu .dropdown-close').on('click', () => {\n                $('.categoryfiltermenu .dropdown-menu').removeClass('show');\n            });\n\n        });\n\n        $(categorylink).on('click', function(event) {\n            event.preventDefault();\n            $(categoryfilter).val($(this).data('id')).trigger('change');\n            return false;\n        });\n        var strings = [\n            {\n                key: 'nocoursefound',\n                component: 'theme_remui'\n            }\n        ];\n        str.get_strings(strings).then(function(stringres) {\n            langstrings = stringres;\n\n            filterobj = categoryFilters(defaultCategory); // Global object for filters.\n            // Initialize global filter object with default values.\n\n            var vars = [],\n                hash;\n            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n\n            for (var i = 0; i < hashes.length; i++) {\n                hash = hashes[i].split('=');\n                vars.push(hash[0]);\n                vars[hash[0]] = hash[1];\n            }\n\n            if (vars.categoryid && vars.categoryid != 0) {\n                filterobj.category = vars.categoryid;\n            }\n\n            setDefaultCourseFilters(); // It will set filters default value to global variable filterobj.\n\n            if (vars.hasOwnProperty('sort') && typeof vars.sort !== 'function') {\n                filterobj.sort = vars.sort;\n            }\n\n            if (vars.search != undefined) {\n                filterobj.search = decodeURI(vars.search);\n            }\n\n            generateFilters(filterobj); // This will create filters.\n            generateCourseCards(); // Course cards Generation.\n            populate_tags();\n        });\n    };\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Ajax","str","templates","toolbar","Notification","UserRepository","filterobj","langstrings","categoryfilter","sortfilter","cardswrapperarea","cardspagination","gridtemplate","searchfilter","coursecounter","tagswrapper","togglebtn","courseArchieveFilters","SELECTORS","courseContent","mycourses","courses","isLoaded","this","getActive","loaded","state","undefined","reset","tab","updatePage","empty","pagination","generateCourseCards","populate_tags","call","methodname","args","data","JSON","stringify","done","response","append","generateHorizontalScroller","fail","exception","element","length","_main","scrollWidth","clientWidth","_leftscroll","removeClass","updateButtons","disabled","scrollLeft","_scrollWidth","_clientWidth","moveRight","_ele","scrollStep","moveLeft","_lInterval","_rInterval","on","setInterval","clearInterval","isFilterModified","toggleContent","show","serviceName","parse","text","totalcoursescount","viewobj","view","filterbuttonsarray","prefveiwbuttonavailable","filter","attr","rendertemplate","latest_card","window","screen","width","updateView","viewClasses","grid","list","summary","allClasses","Object","values","join","addClass","updateCardContainer","i","render","then","html","js","appendNodeContents","each","content","style","htmldata","hide","getCourses","hidecontent","views","commonRemoveClasses","btnSelector","courseFilterCommon","page","pageno","setCoursePerPageDetails","sessionStorage","setItem","shortingSelectOption","e","sort","maxCourseSelectOption","courserowperpage","courseFilterFormSubmit","preventDefault","selectedFilters","getCheckedFiltersData","keys","isfilterapplied","coursefilters","courseFilterFormClear","find","prop","$filterform","filterCount","filterType","value","val","name","push","courseperrow","screenWidth","innerWidth","document","documentElement","body","hasClass","maxCourseDefault","Math","ceil","activeOption","delegate","location","category","target","url","M","cfg","wwwroot","encodeURI","search","history","replaceState","title","reload","stopPropagation","initPagination","checked","clckviewbtn","setUserPreference","toggleClass","linkdata","href","parentElement","hash","hashes","slice","indexOf","split","vars","init","defaultCategory","ready","categorydescription","get","remove","insertAfter","summaryheight","height","$container","$wrapper","$readMore","$readLess","toggleSummary","expand","event","trigger","get_strings","key","component","stringres","_pageobj","_obj","categoryFilters","categoryid","getItem","activesort","forEach","filterInputField","activepage","hasOwnProperty","islimitedwidth","windowWidth","setDefaultCourseFilters","decodeURI","filterdata","selectpicker","isNumeric","targetElement","generateFilters"],"mappings":"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"}