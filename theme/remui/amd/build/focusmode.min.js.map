{"version":3,"file":"focusmode.min.js","sources":["../src/focusmode.js"],"sourcesContent":["/* eslint-disable no-console*/\n/* eslint-disable no-undef*/\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     theme_remui/focusmode\n * @copyright (c) 2023 WisdmLabs (https://wisdmlabs.com/)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'theme_remui/notice', 'core/str','theme_remui/user/repository'], function($, Notice, Str, UserRepository) {\n    return {\n        init: function(action) {\n            $(document).ready(function() {\n                var focusmode = FocusMode(action);\n                focusmode.initFocusMode();\n            });\n        }\n    };\n\n    /**\n     * Main category filters class.\n     * @param {String} fmstatus Encoded settings string\n     * @return {Object} Filter object\n     */\n    function FocusMode(fmstatus) {\n\n        var SELECTORS = {\n            BODY: 'body',\n            BUTTON_FULLSCREEN: '#toggleFullscreen',\n            FM_BUTTON: '#focusmodebutton',\n            FM_BUTTON_ICON: '#focusmodebutton i',\n            SECTION_WRAPPER: '.stepprogress-section',\n            SECTION_ITEM: '.stepprogress-item',\n            SECTION: '.section',\n            ACTIVITY: '.activity',\n            GO_BACK: '#go-back',\n            FOCUS_MODE_CLASS: 'focusmode',\n            FOCUS_MODE_TEXT:'#focusmodebutton .btn-floating-text',\n            FOCUS_MODE_DROPDOWN_TOGGLE: '.focus-dropdown .dropdown-toggle',\n        };\n\n        var _obj = {\n            fmstatus: fmstatus\n        };\n        var strings = [\n           {\n               key: 'focusmodeenabled',\n               component: 'theme_remui'\n           },\n           {\n               key: 'focusmodedisabled',\n               component: 'theme_remui'\n           }\n       ];\n\n        /**\n         * Initialize focus mode\n         */\n        _obj.initFocusMode = function() {\n            Str.get_strings(strings).then(function(results) {\n                strings = results;\n                _obj.setupFocusMode();\n                _obj.initEvents();\n            });\n        };\n\n        _obj.setupFocusMode = function() {\n            var action = (_obj.fmstatus) ? \"activate\" : \"deactivate\";\n\n            // _obj.changeFMButtonClasses(action);\n            if (action === \"activate\") {\n                Notice.info(strings[0]);\n            }\n        };\n\n        /**\n         * Initialize events required for focus mode\n         */\n        _obj.initEvents = function() {\n            // Toggle the Activation/Deactivate Focus Mode\n            $(SELECTORS.FM_BUTTON).on(\"click\", function() {\n                _obj.toggleFocusMode();\n            });\n\n            $(SELECTORS.FOCUS_MODE_DROPDOWN_TOGGLE).on(\"click\", function() {\n                $(this).toggleClass('active');\n            });\n        };\n\n        _obj.changeFMButtonClasses = function(action) {\n            if (action === \"activate\") {\n                $(SELECTORS.BODY).addClass(SELECTORS.FOCUS_MODE_CLASS);\n                $(SELECTORS.FM_BUTTON).addClass('btn-danger').removeClass('btn-primary');\n                $(SELECTORS.FM_BUTTON).attr('aria-pressed', 'true');\n                $(SELECTORS.FM_BUTTON_ICON).removeClass().addClass('edw-icon edw-icon-Cancel');\n                $(SELECTORS.FOCUS_MODE_TEXT).text(M.util.get_string(\"focusmodeactivestatetext\", \"theme_remui\"));\n            }\n            if (action === \"deactivate\") {\n                $(SELECTORS.BODY).removeClass(SELECTORS.FOCUS_MODE_CLASS);\n                $(SELECTORS.FM_BUTTON).removeClass('btn-danger').addClass('btn-primary');\n                $(SELECTORS.FM_BUTTON).attr('aria-pressed', 'false');\n                $(SELECTORS.FM_BUTTON_ICON).removeClass().addClass('edw-icon edw-icon-Expand');\n                $(SELECTORS.FOCUS_MODE_TEXT).text(M.util.get_string(\"focusmodenormalstatetext\", \"theme_remui\"));\n            }\n            $(\"#page.drawers.show-drawer-left .drawer-left-toggle button\").click();\n            $(\"#page.drawers.show-drawer-right .drawer-right-toggle button\").click();\n        };\n\n        _obj.toggleFocusMode = async function() {\n            // Var inFocus = $('body').hasClass(SELECTORS.FOCUS_MODE_CLASS);\n            var action, status, tostr;\n            if (_obj.fmstatus) {\n                action = \"deactivate\";\n                status = false;\n                tostr = strings[1];\n            } else {\n                action = \"activate\";\n                status = true;\n                tostr = strings[0];\n            }\n\n            _obj.changeFMButtonClasses(action);\n\n            _obj.fmstatus = status;\n            $oldprefences = await UserRepository.getUserPreferences('enable_focus_mode');\n            // console.log(_obj.fmstatus);\n            // console.log($oldprefences.preferences[0]);\n            let userfocusmodepref = {};\n            const courseid = M.cfg.courseId;\n\n            // Check if value is a string and attempt to parse JSON\n            if (typeof $oldprefences.preferences[0]?.value === 'string') {\n                try {\n                    const parsedData = JSON.parse($oldprefences.preferences[0].value);\n                    userfocusmodepref = typeof parsedData === 'object' && parsedData !== null ? parsedData : {};\n                } catch (e) {\n                    userfocusmodepref = {};\n                }\n            }\n            // Update or add the courseid with fmstatus\n            userfocusmodepref[courseid] = _obj.fmstatus;\n\n            // Save the updated preferences\n            UserRepository.setUserPreference('enable_focus_mode', JSON.stringify(userfocusmodepref));\n            Notice.info(tostr);\n        };\n        return _obj;\n    }\n});\n"],"names":["define","$","Notice","Str","UserRepository","init","action","document","ready","SELECTORS","_obj","strings","focusmode","BODY","BUTTON_FULLSCREEN","FM_BUTTON","FM_BUTTON_ICON","SECTION_WRAPPER","SECTION_ITEM","SECTION","ACTIVITY","GO_BACK","FOCUS_MODE_CLASS","FOCUS_MODE_TEXT","FOCUS_MODE_DROPDOWN_TOGGLE","key","component","fmstatus","initFocusMode","get_strings","then","results","setupFocusMode","initEvents","info","on","toggleFocusMode","this","toggleClass","changeFMButtonClasses","addClass","removeClass","attr","text","M","util","get_string","click","async","status","tostr","$oldprefences","getUserPreferences","userfocusmodepref","courseid","cfg","courseId","preferences","_$oldprefences$prefer","value","parsedData","JSON","parse","e","setUserPreference","stringify"],"mappings":";;;;;AAuBAA,+BAAO,CAAC,SAAU,qBAAsB,WAAW,gCAAgC,SAASC,EAAGC,OAAQC,IAAKC,sBACjG,CACHC,KAAM,SAASC,QACXL,EAAEM,UAAUC,OAAM,eAclBC,UAeAC,KAGAC,QA/BQC,WAaRH,UAAY,CACZI,KAAM,OACNC,kBAAmB,oBACnBC,UAAW,mBACXC,eAAgB,qBAChBC,gBAAiB,wBACjBC,aAAc,qBACdC,QAAS,WACTC,SAAU,YACVC,QAAS,WACTC,iBAAkB,YAClBC,gBAAgB,sCAChBC,2BAA4B,oCAM5Bb,QAAU,CACX,CACIc,IAAK,mBACLC,UAAW,eAEf,CACID,IAAK,oBACLC,UAAW,iBAVdhB,KAAO,CACPiB,SA7B8BrB,SA6C7BsB,cAAgB,WACjBzB,IAAI0B,YAAYlB,SAASmB,MAAK,SAASC,SACnCpB,QAAUoB,QACVrB,KAAKsB,iBACLtB,KAAKuB,iBAIbvB,KAAKsB,eAAiB,WAIH,aAHDtB,KAAKiB,SAAY,WAAa,eAIxCzB,OAAOgC,KAAKvB,QAAQ,KAO5BD,KAAKuB,WAAa,WAEdhC,EAAEQ,UAAUM,WAAWoB,GAAG,SAAS,WAC/BzB,KAAK0B,qBAGTnC,EAAEQ,UAAUe,4BAA4BW,GAAG,SAAS,WAChDlC,EAAEoC,MAAMC,YAAY,cAI5B5B,KAAK6B,sBAAwB,SAASjC,QACnB,aAAXA,SACAL,EAAEQ,UAAUI,MAAM2B,SAAS/B,UAAUa,kBACrCrB,EAAEQ,UAAUM,WAAWyB,SAAS,cAAcC,YAAY,eAC1DxC,EAAEQ,UAAUM,WAAW2B,KAAK,eAAgB,QAC5CzC,EAAEQ,UAAUO,gBAAgByB,cAAcD,SAAS,4BACnDvC,EAAEQ,UAAUc,iBAAiBoB,KAAKC,EAAEC,KAAKC,WAAW,2BAA4B,iBAErE,eAAXxC,SACAL,EAAEQ,UAAUI,MAAM4B,YAAYhC,UAAUa,kBACxCrB,EAAEQ,UAAUM,WAAW0B,YAAY,cAAcD,SAAS,eAC1DvC,EAAEQ,UAAUM,WAAW2B,KAAK,eAAgB,SAC5CzC,EAAEQ,UAAUO,gBAAgByB,cAAcD,SAAS,4BACnDvC,EAAEQ,UAAUc,iBAAiBoB,KAAKC,EAAEC,KAAKC,WAAW,2BAA4B,iBAEpF7C,EAAE,6DAA6D8C,QAC/D9C,EAAE,+DAA+D8C,SAGrErC,KAAK0B,gBAAkBY,2CAEf1C,OAAQ2C,OAAQC,MAChBxC,KAAKiB,UACLrB,OAAS,aACT2C,QAAS,EACTC,MAAQvC,QAAQ,KAEhBL,OAAS,WACT2C,QAAS,EACTC,MAAQvC,QAAQ,IAGpBD,KAAK6B,sBAAsBjC,QAE3BI,KAAKiB,SAAWsB,OAChBE,oBAAsB/C,eAAegD,mBAAmB,yBAGpDC,kBAAoB,SAClBC,SAAWV,EAAEW,IAAIC,YAG4B,+CAAxCL,cAAcM,YAAY,2CAA1BC,sBAA8BC,iBAE3BC,WAAaC,KAAKC,MAAMX,cAAcM,YAAY,GAAGE,OAC3DN,kBAA0C,iBAAfO,YAA0C,OAAfA,WAAsBA,WAAa,GAC3F,MAAOG,GACLV,kBAAoB,GAI5BA,kBAAkBC,UAAY5C,KAAKiB,SAGnCvB,eAAe4D,kBAAkB,oBAAqBH,KAAKI,UAAUZ,oBACrEnD,OAAOgC,KAAKgB,QAETxC,MApICE,UAAUgB"}