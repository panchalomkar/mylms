{"version":3,"file":"pageslistsettings.min.js","sources":["../src/pageslistsettings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main js for template importer\n *\n * @module     local/edwisersiteimporter\n * @author     Yogesh Shirsath\n * @copyright  (c) 2020 WisdmLabs (https://wisdmlabs.com/) <support@wisdmlabs.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/templates',\n    'core/notification',\n    'core/ajax',\n    'core/str',\n    'core/toast'\n], function($,\n    ModalFactory,\n    ModalEvents,\n    Templates,\n    Notification,\n    Ajax,\n    Str,\n    Toast\n) {\n    const SELECTORS = {\n        'PAGE_SUB_HEADER': '.page_sub_header',\n        'TAG_BOX': '.tag-box',\n        'PAGE_SUB_HEADER_MENUS': '.page_sub_header-menus',\n        'TABLE_ROW': '.epb_table_row',\n        'ROW_NAME': '.epb_table_row-name',\n        'ROW_INPUT': '.pagename_edit_form input[name=pagename]',\n        'ROW_OLDINPUT': '.pagename_edit_form input[name=old_pagename]',\n        'ROW_PAGENAME': '.epb_table_row-name .pagename',\n        'MODIFIE_DDATE': '.epb_table_row-date',\n        'TARGET_COPYURL': '.target_url',\n        'ADD_PAGE_ROW': '#epb_add_page_row',\n        'BTN_EDIT': '.btn-edit',\n        'BTN_SUBMITEDIT': '.btn-submitedit',\n        'BTN_COPYURL': '.btn-copyurl',\n        'BTN_DUPLICATE': '.btn-duplicate',\n        'BTN_DELETE': '.btn-delete',\n        'BTN_ADDPAGE': '.btn-addpage',\n        'BTN_EYE': '.btn-eye',\n        'BTN_EYECLOSE': '.btn-eyeclose',\n        'BTN_PUBLISH': '.btn-publish',\n        'HIDDEN_TAG': '.hidden-tag',\n        'DRAFT_TAG': '.draft-tag'\n    };\n\n    const ACTION = {\n        'UPDATE_PAGE': 'update_page',\n        'DUPLICATE_PAGE': 'replicate_page_with_layouts',\n        'DELETE_PAGE_RECORD': 'delete_page',\n        'ADD_NEW_PAGE': 'add_new_page',\n        'PUBLISH_PAGE': 'publish_page_with_layouts'\n    };\n\n\n    // ****** IMPORTANT ******\n    // Do not change the sequence.\n    // If you want to add new strings here, add it at the bottom.\n    // Do not remove any string from the array.\n    // There is no way we can revert back if sequence is changed.\n    // ****** IMPORTANT ******\n    const strings = [\n        {key: 'copyurl_toast_msg', component: 'local_edwiserpagebuilder'},\n        {key: 'replicate_toast_msg', component: 'local_edwiserpagebuilder'},\n        {key: 'delete_toast_msg', component: 'local_edwiserpagebuilder'},\n        {key: 'published', component: 'local_edwiserpagebuilder'},\n        {key: 'update_text', component: 'local_edwiserpagebuilder'},\n        {key: 'no', component: 'local_edwiserpagebuilder'},\n        {key: 'yes', component: 'local_edwiserpagebuilder'},\n        {key: 'hidden_text', component: 'local_edwiserpagebuilder'},\n        {key: 'show_toast_msg', component: 'local_edwiserpagebuilder'},\n        {key: 'pagepublishmodalhead', component: 'local_edwiserpagebuilder'},\n        {key: 'pagepublishmodaldesc', component: 'local_edwiserpagebuilder'},\n        {key: 'pageupdatemodalhead', component: 'local_edwiserpagebuilder'},\n        {key: 'pageupdatemodaldesc', component: 'local_edwiserpagebuilder'},\n        {key: 'updatemsg', component: 'local_edwiserpagebuilder'},\n    ];\n\n    var LANGS; // Gloabl variable to store languages.\n\n    // Functionality to fetch strings.\n    const fetchLanguages = () => {\n        Str.get_strings(strings).then(function(results) {\n            LANGS = results;\n            return results;\n        });\n    };\n\n    // Set sub header on top.\n    function setHeaderOnTop() {\n        if ($('.page_sub_header').length) {\n            setTimeout(function() {\n                let pagesubheader = $('.page_sub_header');\n\n                pagesubheader.remove();\n\n                $(\"#page-wrapper nav.navbar\").after(pagesubheader);\n\n                let navbarheight = $('#page-wrapper nav.navbar').height();\n\n                let subpageheaderheight = $('.page_sub_header').height();\n\n                $('.page_sub_header').css('margin-top', navbarheight);\n\n                $('#page.drawers').css('margin-top', (navbarheight + subpageheaderheight + 20));\n\n                $('.drawer-toggler').css('margin-top', (navbarheight + subpageheaderheight));\n\n            }, 10);\n        }\n    }\n\n    function dateModifier(modifiedDate) {\n        // Create a Date object from the Unix timestamp\n        let date = new Date(modifiedDate * 1000); // Multiply by 1000 to convert from seconds to milliseconds\n\n        // Define an array of month names\n        var monthNames = [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n        // Format the date\n        return date.getDate() + \" \" + monthNames[date.getMonth()] + \" \" + date.getFullYear();\n    }\n\n    // Render the page list.\n    function renderSitePageLists() {\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: 'sitepage_table_content',\n                config: ''\n            },\n            done: function(response) {\n                response = JSON.parse(response);\n\n                $.each(response, function(index, obj) {\n                    if (obj.refid == -1) {\n                        obj.indraft = true;\n                        obj.pageurl = \"pagedraft.php?id=\" + obj.id;\n                    } else {\n                        obj.pageurl = \"page.php?id=\" + obj.refid;\n                    }\n                    obj.visible = parseInt(obj.visible, 10);\n                    obj.pagemodified = dateModifier(obj.pagemodified);\n                });\n\n\n                Templates.render(\"local_edwiserpagebuilder/managepages\", {\n                    pages: response,\n                    config: M.cfg\n                }).done(function(html, js) {\n                    Templates.appendNodeContents($('#managepage-wrapper'), html, js);\n                });\n            },\n            fail: function(ex) {\n                Notification.exception(ex);\n            }\n        }]);\n    }\n\n    // Msg contain string name.\n    // args-> object or variable according to string require.\n    function showToastMessage(classes, message) {\n        Toast.add(message, {\n            delay: 3000,\n            closeButton: true,\n            type: ' epb-cp-toast epb-toast-message ' + classes\n        });\n    }\n\n    // Trigger on page edit icon.\n    function showEditPagename(e) {\n        let pageid = $(this).data(\"value\");\n\n        let tableRowName = $(`#${pageid} ${SELECTORS.ROW_NAME}`);\n        let inputField = $(`#${pageid} ${SELECTORS.ROW_INPUT}`);\n        let pageNameLinkText = $(`#${pageid} ${SELECTORS.ROW_PAGENAME}`);\n\n        $(SELECTORS.ROW_NAME).removeClass(\"name_editing\");\n\n        tableRowName.addClass(\"name_editing\");\n\n        inputField.focus();\n\n        inputField.val(\"\");\n\n        inputField.val(pageNameLinkText.text());\n\n        let inputElement = inputField.get(0);\n\n        inputElement.scrollLeft = inputElement.scrollWidth;\n    }\n\n    // Trigger when updated pagename submit by clicking enter button or check box icon.\n    function submitUpdatedPagename(e, id = 0) {\n        e.preventDefault();\n\n        let pageid = id ? id : $(this).closest(\".input-group\").data(\"value\");\n\n        let inputField = $(`#${pageid} ${SELECTORS.ROW_INPUT}`);\n        let inputOldField = $(`#${pageid} ${SELECTORS.ROW_OLDINPUT}`);\n        let tableRowName = $(`#${pageid} ${SELECTORS.ROW_NAME}`);\n        let pageNameLinkText = $(`#${pageid} ${SELECTORS.ROW_PAGENAME}`);\n        let pageModifiedDate = $(`#${pageid} ${SELECTORS.MODIFIE_DDATE}`);\n\n        let pagename = inputField.val();\n        if (pagename.length > 0) {\n            inputField[0].value = inputOldField.val();\n\n            Ajax.call([{\n                methodname: 'local_edwiserpagebuilder_do_page_action',\n                args: {\n                    action: ACTION.UPDATE_PAGE,\n                    config: JSON.stringify({\n                        'id': pageid,\n                        'pagename': pagename\n                    })\n                },\n                done: function(response) {\n                    id = JSON.parse(response);\n                    pageNameLinkText.text(pagename);\n                    pageModifiedDate.text(dateModifier(Math.floor(Date.now() / 1000)));\n                },\n                fail: function(ex) {\n                    Notification.exception(ex);\n                }\n            }]);\n\n            tableRowName.removeClass(\"name_editing\");\n        }\n\n    };\n\n    function copyPageUrl(e) {\n        let pageid = $(this).data(\"value\");\n\n        let copyText = $(`#${pageid} ${SELECTORS.TARGET_COPYURL}`);\n        copyText.show();\n        copyText.select();\n        document.execCommand('copy');\n        copyText.hide();\n\n\tshowToastMessage(' ', LANGS[0]);\n    }\n\n    // When Page replicated or created,\n    // We got page data after that we insert it to table row by using this function.\n    function insertRowToTable(page) {\n        Templates.render(\"local_edwiserpagebuilder/site_page_table_single_row\", {\n            pages: page,\n            config: M.cfg\n        }).done(function(html, js) {\n            Templates.prependNodeContents($('.epb_table tbody'), html, js);\n            $('html, body').animate({ scrollTop: $(\".epb_table\")[0].offsetTop }, $(window).scrollTop() / 6);\n        });\n    }\n\n    function replicatePage(e) {\n        let pageid = $(this).data(\"value\");\n        let pagename = $(`#${pageid} ${SELECTORS.ROW_PAGENAME}`).text() + \"_copy\";\n\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: ACTION.DUPLICATE_PAGE,\n                config: JSON.stringify({\n                    \"id\": pageid\n                })\n            },\n            done: function(response) {\n                id = JSON.parse(response);\n                let visible = true;\n                if($(`#${pageid} ${SELECTORS.HIDDEN_TAG}`).length) {\n                    visible = false;\n                }\n                let page = {\n                    \"id\": id,\n                    \"pagename\": pagename,\n                    \"pageurl\": \"pagedraft.php?id=\" + id,\n                    \"indraft\": true,\n                    \"visible\": visible,\n                    \"pagemodified\": dateModifier(Math.floor(Date.now() / 1000))\n                };\n                if ($(`${SELECTORS.PAGE_SUB_HEADER_MENUS} ${SELECTORS.BTN_DUPLICATE}`).length) {\n\n                    showToastMessage(' ', LANGS[1]);\n\n                    let newUrl = M.cfg.wwwroot + '/local/edwiserpagebuilder/pagedraft.php?id=' + id;\n\n                    window.open(newUrl, '_blank');\n                } else {\n                    insertRowToTable(page);\n                }\n            },\n            fail: function(ex) {\n                Notification.exception(ex);\n            }\n        }]);\n    }\n\n\n    async function deletePage(e) {\n        let pageid = $(this).data(\"value\");\n        let currentPage = $(\"#\" + pageid);\n        let tbody = currentPage.parent();\n        let addPageRow = $(SELECTORS.ADD_PAGE_ROW);\n\n        deletemodal = await ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: Str.get_string('pagedeletationmodalhead', 'local_edwiserpagebuilder'),\n            body: Str.get_string('pagedeletationmodaldesc', 'local_edwiserpagebuilder'),\n        })\n        .done(function(modal) {\n            // Change cancel button styling.\n            modal.setButtonText('cancel', LANGS[5]);\n\n            // Change Save button text.\n            modal.setButtonText('save', LANGS[6]);\n\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                Ajax.call([{\n                    methodname: 'local_edwiserpagebuilder_do_page_action',\n                    args: {\n                        action: ACTION.DELETE_PAGE_RECORD,\n                        config: JSON.stringify({\n                            \"id\": pageid\n                        })\n                    },\n                    done: function(response) {\n                        response = JSON.parse(response);\n                        currentPage.remove();\n                        if (tbody.children().length == 1) {\n                            addPageRow.removeClass(\"d-none\");\n                        }\n                        showToastMessage(' ', LANGS[2]);\n                    },\n                    fail: function(ex) {\n                        Notification.exception(ex);\n                    }\n                }]);\n            });\n            modal.show();\n        });\n\n        $(deletemodal.getActionSelector('cancel')).addClass(\"deletemodal-btns\");\n        $(deletemodal.getActionSelector('save')).addClass(\"deletemodal-btns\");\n    }\n\n    function publishCurrentPage() {\n        let publishBtn = $(this);\n        let pageid = $(this).data(\"value\");\n        let indraft = $(this).attr('indraft') !== undefined;\n\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: indraft ? LANGS[9] : LANGS[11],\n            body: indraft ? LANGS[10] : LANGS[12],\n        })\n        .done(function(modal) {\n            modal.setButtonText('cancel', LANGS[5]);\n            modal.setButtonText('save', LANGS[6]);\n\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                Ajax.call([{\n                    methodname: 'local_edwiserpagebuilder_do_page_action',\n                    args: {\n                        action: ACTION.PUBLISH_PAGE,\n                        config: JSON.stringify({\n                            \"id\": pageid\n                        })\n                    },\n                    done: function(response) {\n                        id = JSON.parse(response);\n\n                        $(SELECTORS.BTN_PUBLISH).text(LANGS[4]);\n                        publishBtn.removeAttr('indraft');\n\n                        showToastMessage(\"\", indraft ? LANGS[3] : LANGS[13]);\n                    },\n                    fail: function(ex) {\n                        Notification.exception(ex);\n                    }\n                }]);\n            });\n            modal.show();\n        });\n    };\n\n    function showAddPageInput(e) {\n        let addPageRow = $(SELECTORS.ADD_PAGE_ROW);\n        let inputField = $(`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.ROW_INPUT}`);\n        $(addPageRow).removeClass(\"d-none\");\n\n        let tableRowName = $(`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.ROW_NAME}`);\n\n        addPageRow.remove();\n        $('.epb_table tbody').prepend(addPageRow);\n\n        $(SELECTORS.ROW_NAME).removeClass(\"name_editing\");\n        $(tableRowName).addClass(\"name_editing\");\n\n        inputField.focus();\n    };\n\n    function inputChangeHandler(e) {\n        let submitEdit = $(SELECTORS.BTN_SUBMITEDIT);\n\n        let inputText = $(this).val();\n        if (inputText.length > 0) {\n            submitEdit.removeClass(\"d-none\");\n        } else {\n            submitEdit.addClass(\"d-none\");\n        }\n    };\n\n    function addPageHandler(e) {\n        let inputField = $(`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.ROW_INPUT}`);\n        let submitEdit = $(`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.BTN_SUBMITEDIT}`);\n\n        let pagename = inputField.val();\n\n        if (pagename.length > 0) {\n            inputField[0].value = \"\";\n\n            let pagedata = JSON.stringify({\n                \"pagename\": pagename\n            });\n\n            Ajax.call([{\n                methodname: 'local_edwiserpagebuilder_do_page_action',\n                args: {\n                    action: ACTION.ADD_NEW_PAGE,\n                    config: pagedata\n                },\n                done: function(response) {\n                    id = JSON.parse(response);\n\n                    $(SELECTORS.ADD_PAGE_ROW).addClass(\"d-none\");\n                    submitEdit.addClass(\"d-none\");\n\n                    let page = {\n                        \"id\": id,\n                        \"pagename\": pagename,\n                        \"pageurl\": \"pagedraft.php?id=\" + id,\n                        \"indraft\": true,\n                        \"visible\": true,\n                        \"pagemodified\": dateModifier(Math.floor(Date.now() / 1000))\n                    };\n\n                    insertRowToTable(page);\n                },\n                fail: function(ex) {\n                    Notification.exception(ex);\n\n                }\n            }]);\n        }\n    }\n\n    function makePageVisible(e) {\n        let pageid = $(this).data(\"value\");\n\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: ACTION.UPDATE_PAGE,\n                config: JSON.stringify({\n                    'id': pageid,\n                    'visible': 1\n                })\n            },\n            done: function(response) {\n                id = JSON.parse(response);\n                $(`#${pageid} ${SELECTORS.BTN_EYECLOSE}`).removeClass('d-none');\n                $(`#${pageid} ${SELECTORS.BTN_EYE}`).addClass('d-none');\n                $(`#${pageid} ${SELECTORS.HIDDEN_TAG}`).remove();\n\n                showToastMessage(' ', LANGS[8]);\n            },\n            fail: function(ex) {\n                Notification.exception(ex);\n            }\n        }]);\n\n    }\n\n    function makePageHidden(e) {\n        let pageid = $(this).data(\"value\");\n\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: ACTION.UPDATE_PAGE,\n                config: JSON.stringify({\n                    'id': pageid,\n                    'visible': 0\n                })\n            },\n            done: function(response) {\n                id = JSON.parse(response);\n                $(`#${pageid} ${SELECTORS.BTN_EYECLOSE}`).addClass('d-none');\n                $(`#${pageid} ${SELECTORS.BTN_EYE}`).removeClass('d-none');\n\n                let hiddenTag = $(`\n                    <div class=\"btn-tag hidden-tag\" title=\"${LANGS[7]}\" >\n                        ${LANGS[7]}\n                    </div>\n                `);\n\n                $(`${SELECTORS.PAGE_SUB_HEADER} ${SELECTORS.TAG_BOX}`).append(hiddenTag);\n\n                showToastMessage(' ', LANGS[8]);\n            },\n            fail: function(ex) {\n                Notification.exception(ex);\n            }\n        }]);\n    }\n\n    function initEvents() {\n        renderSitePageLists();\n\n        // Trigger on page edit icon.\n        $(document).on(\"click\", `${SELECTORS.TABLE_ROW} ${SELECTORS.BTN_EDIT}`, showEditPagename);\n\n         // Trigger when updated pagename submit by clicking enter button or check box icon.\n        $(document).on(\"click\", `${SELECTORS.TABLE_ROW} ${SELECTORS.BTN_SUBMITEDIT}`, submitUpdatedPagename);\n\n        // When we change any thing on input than it's trigger,\n        // Its defined for hiding check box icon if input field is empty.\n        $(document).on(\"input\",`${SELECTORS.TABLE_ROW} ${SELECTORS.ROW_INPUT}`, inputChangeHandler);\n\n        // Trigger on submit edit input by clicking enter button of keyboard.\n        $(document).on(\"keypress\", `${SELECTORS.TABLE_ROW} ${SELECTORS.ROW_INPUT}`, function(e) {\n            if (e.which === 13) {\n                e.preventDefault();\n                const parentElement = $(this).closest(\".input-group\");\n                submitUpdatedPagename(e, parentElement.data(\"value\"));\n            }\n        });\n\n        // Trigger on Delete icon.\n        $(document).on(\"click\", `${SELECTORS.TABLE_ROW} ${SELECTORS.BTN_DELETE}`, deletePage);\n\n\n        // Trigger on Add a new page button.\n        $(document).on(\"click\", SELECTORS.BTN_ADDPAGE, showAddPageInput);\n\n        // When we change any thing on input than it's trigger,\n        // Its defined for hiding check box icon if input field is empty.\n        $(document).on(\"input\",`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.ROW_INPUT}`, inputChangeHandler);\n\n        // Submit the page detail by pressing enter key of keyboard.\n        $(document).on(\"keypress\",`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.ROW_INPUT}`, function(e) {\n            if (e.which === 13) {\n                e.preventDefault();\n                addPageHandler(e);\n            }\n        });\n\n        // Submit the page details by clicking checkbox icon.\n        $(document).on(\"click\",`${SELECTORS.ADD_PAGE_ROW} ${SELECTORS.BTN_SUBMITEDIT}`, addPageHandler);\n\n    };\n\n    // These event listner are common for both sub header and site page settings\n    function initCommon() {\n        setHeaderOnTop();\n\n        fetchLanguages();\n\n        // Trigger on copy icon\n        $(document).on(\"click\", SELECTORS.BTN_COPYURL, copyPageUrl);\n\n        // Trigger on Duplicate icon\n        $(document).on(\"click\", SELECTORS.BTN_DUPLICATE, replicatePage);\n\n        // Trigger on Delete icon\n        $(document).on(\"click\", SELECTORS.BTN_PUBLISH, publishCurrentPage);\n\n        // Trigger on Eye Icon\n        $(document).on(\"click\", SELECTORS.BTN_EYE, makePageVisible);\n\n        // Trigger on Eyeclose Icon\n        $(document).on(\"click\", SELECTORS.BTN_EYECLOSE, makePageHidden);\n\n        $(window).on('beforeunload', function(e) {\n            return undefined;\n        });\n    }\n\n    return {\n        init: function() {\n            $(document).ready(function() {\n                initEvents();\n                initCommon();\n            });\n        },\n        initCommon: function() {\n            initCommon();\n        }\n    };\n});\n"],"names":["define","$","ModalFactory","ModalEvents","Templates","Notification","Ajax","Str","Toast","SELECTORS","ACTION","strings","key","component","LANGS","dateModifier","modifiedDate","date","Date","getDate","getMonth","getFullYear","showToastMessage","classes","message","add","delay","closeButton","type","showEditPagename","e","pageid","this","data","tableRowName","inputField","pageNameLinkText","removeClass","addClass","focus","val","text","inputElement","get","scrollLeft","scrollWidth","submitUpdatedPagename","id","preventDefault","closest","inputOldField","pageModifiedDate","pagename","length","value","call","methodname","args","action","config","JSON","stringify","done","response","parse","Math","floor","now","fail","ex","exception","copyPageUrl","copyText","show","select","document","execCommand","hide","insertRowToTable","page","render","pages","M","cfg","html","js","prependNodeContents","animate","scrollTop","offsetTop","window","replicatePage","visible","newUrl","wwwroot","open","deletePage","currentPage","tbody","parent","addPageRow","deletemodal","create","types","SAVE_CANCEL","title","get_string","body","modal","setButtonText","getRoot","on","save","remove","children","getActionSelector","publishCurrentPage","publishBtn","indraft","undefined","attr","removeAttr","showAddPageInput","prepend","inputChangeHandler","submitEdit","addPageHandler","pagedata","makePageVisible","makePageHidden","hiddenTag","append","initEvents","each","index","obj","refid","pageurl","parseInt","pagemodified","appendNodeContents","which","initCommon","setTimeout","pagesubheader","after","navbarheight","height","subpageheaderheight","css","get_strings","then","results","init","ready"],"mappings":"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"}