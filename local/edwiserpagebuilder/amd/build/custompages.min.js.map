{"version":3,"file":"custompages.min.js","sources":["../src/custompages.js"],"sourcesContent":["/* eslint-disable promise/catch-or-return */\ndefine([\n    'local_edwiserpagebuilder/jquery',\n    'core/ajax',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/str',\n    'core/notification',\n], function($, Ajax, Templates, ModalFactory, ModalEvents, str, Notification) {\n\n    const SELECTORS = {\n        'ADDNEWPAGESEL': '.epb-addnewpage',\n        'TITLEINPUT': 'epbpagetitle',\n        'TITLEINPUTSEL': '#epbpagetitle',\n        'NEXTBTN': 'activatepagecreation',\n        'NEXTBTNSEL': '.activatepagecreation',\n        'MODALSAVEACTION': '.layoutchooser.save',\n        'MODALBACKACTION': '.layoutchooser.back',\n        'PAGELAYOUTWRAPPER': 'page-layouts-wrapper',\n        'PAGELAYOUTWRAPPERSEL': '.page-layouts-wrapper',\n        'LAYOUTSRADIOBTN': 'layoutsradiobtn',\n        'LAYOUTSRADIOBTNSEL': 'input[name=\"layoutsradiobtn\"]',\n        'PREVIEWLAYOUTBTNSEL': '.btn_view_icon',\n        'PREVIEWLAYOUT': '.layout-preview',\n        'CLOSELAYOUTBTNSEL': '.layout_close_btn',\n        'CHOOSEDEFAULTLAYOUTSEL': '.default .btn_add_block',\n        'LAYOUTBODYSEL': '.modal_card_body'\n    };\n\n    // ****** IMPORTANT ******\n    // Do not change the sequence.\n    // If you want to add new strings here, add it at the bottom.\n    // Do not remove any string from the array.\n    // There is no way we can revert back if sequence is changed.\n    // ****** IMPORTANT ******\n    const strings = [\n        {key: 'addnewpage', component: 'local_edwiserpagebuilder'},\n        {key: 'next', component: 'local_edwiserpagebuilder'},\n        {key: 'pagetitle', component: 'local_edwiserpagebuilder'},\n        {key: 'back', component: 'local_edwiserpagebuilder'},\n        {key: 'create', component: 'local_edwiserpagebuilder'},\n        {key: 'select', component: 'local_edwiserpagebuilder'},\n        {key: 'chooselayout', component: 'local_edwiserpagebuilder'}\n    ];\n\n    var LANGS; // Gloabl variable to store languages.\n    var titlemodal; // Variable to store reference of Title Modal.\n    var layoutmodal; // Variable to store reference of Layout Modal.\n\n    // Functionality to fetch strings.\n    const fetchLanguages = () => {\n        str.get_strings(strings).then(function(results) {\n            LANGS = results;\n            return results;\n        });\n    };\n\n    // Add functionality to create page from Scratch.\n    const createpagefromscratch = (title, layoutid) => {\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: \"add_new_page_with_layoutid\",\n                config: JSON.stringify({\n                    'title': title,\n                    'layoutid': layoutid\n                })\n            },\n            done: function(response) {\n                id = JSON.parse(response);\n\n                // if (layoutid == 0) {\n                //     // Setting the config if the page has no pagelayout.\n                //     setConfig(\"show-layout-\" + id, true, \"local_edwiserpagebuilder\");\n                // }\n\n                // Redirect to newly created page.\n                let newUrl = M.cfg.wwwroot + '/local/edwiserpagebuilder/pagedraft.php?id=' + id;\n\n                window.location.href = newUrl;\n            },\n            fail: function (ex) {\n                Notification.exception(ex);\n            }\n        }]);\n\n    };\n\n\n    // // Add functionality to add layout on exisiting page\n    function addBlankLayoutOnExistingPage(pageid, layoutid) {\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: \"add_layout_on_exisiting_page\",\n                config: JSON.stringify({\n                    'pageid': pageid,\n                    'layoutid': layoutid\n                })\n            },\n            done: function (response) {\n                id = JSON.parse(response);\n\n                // if (layoutid == 0) {\n                //     // Setting the config if the page has no pagelayout.\n                //     setConfig(\"show-layout-\" + id, true, \"local_edwiserpagebuilder\");\n                // }\n\n                // Redirect to newly created page.\n                let newUrl = M.cfg.wwwroot + '/local/edwiserpagebuilder/pagedraft.php?id=' + id;\n\n                window.location.href = newUrl;\n            },\n            fail: function (ex) {\n                Notification.exception(ex);\n            }\n        }]);\n    }\n\n    // Layout Chooser Modal.\n    const openLayoutSelector = async(callback, onlylayout = false) => {\n        var loaderurl = M.cfg.wwwroot + '/local/edwiserpagebuilder/pix/siteinnerloader.svg';\n        layoutmodal = await ModalFactory.create({\n            title: onlylayout ? LANGS[6] : LANGS[0],\n            type: ModalFactory.types.SAVE_CANCEL,\n            body: `\n            <div class=\"page-layouts-wrapper section-modal-body\">\n                <div class=\"addnewpageform d-flex justify-content-center align-items-center\">\n                    <img src=\"${loaderurl}\" alt=\"spinner\"/>\n                </div>\n            </div>\n            `\n        }).done(function(modal) {\n\n            if (onlylayout) {\n\n                // Change Save button text.\n                modal.setButtonText('save', LANGS[5]);\n            } else {\n                // Change cancel button styling.\n                modal.setButtonText('cancel', LANGS[3]);\n\n                $(modal.getActionSelector('cancel')).addClass(\"border-0\");\n\n                // Change Save button text.\n                modal.setButtonText('save', LANGS[4]);\n            }\n\n            // Add full width class to modal.\n            var extraclasses = 'fullwidth-modal layout-chooser';\n\n            extraclasses += (onlylayout) ? ' onlylayout' : \"\";\n\n            modal.getModal().parent().addClass(extraclasses);\n\n            modal.show();\n        });\n\n        $(layoutmodal.getActionSelector('save')).addClass(\"btn-disabled\");\n\n        // This code handle checkbox, show that only one checkbox can be checked\n        $(document).on('change', SELECTORS.LAYOUTSRADIOBTNSEL, function() {\n            $(layoutmodal.getActionSelector('save')).removeClass(\"btn-disabled\");\n        });\n\n        // This event trigger when we click on layout Image and It will select the layout\n        $(document).on('click', SELECTORS.LAYOUTBODYSEL, function() {\n            let layoutid = $(this).data(\"layoutid\");\n            let targetInput = $(`${SELECTORS.LAYOUTSRADIOBTNSEL}[value=${layoutid}]`);\n            targetInput.prop('checked', true);\n            $(layoutmodal.getActionSelector('save')).removeClass(\"btn-disabled\");\n        });\n\n        // Trigger when blank layout select\n        $(document).on('click', SELECTORS.CHOOSEDEFAULTLAYOUTSEL, function() {\n\n            var title = $(SELECTORS.TITLEINPUTSEL).val();\n            var bodyClasses = $(\"body\").attr(\"class\");\n            var pageclassdata = bodyClasses.match(/epb-showlayout-(\\d+)/);\n\n            if ( pageclassdata != null && pageclassdata.length > 0) {\n\n                var pageid = pageclassdata[1];\n\n                addBlankLayoutOnExistingPage(pageid, 0);\n            } else {\n                createpagefromscratch(title, 0);\n            }\n\n        });\n\n        // Things to be done on layout modal destruction.\n        layoutmodal.getRoot().on(ModalEvents.destroyed, () => {\n            titlemodal.destroy();\n        });\n\n        // Things to be done on layout save.\n        layoutmodal.getRoot().on(ModalEvents.save, (e) => {\n            // Get chosen layout id.\n            var layoutid = $(SELECTORS.LAYOUTSRADIOBTNSEL + ':checked').val();\n            // Trigger the callback.\n            callback(layoutid);\n\n            if (onlylayout) {\n                // Destroy title modal as well.\n                titlemodal.destroy();\n            }\n        });\n\n        // This function will work asynchronously.\n        // This will fetch all the available layouts and render it to created layout modal.\n        fetchLayoutTemplates('local_edwiserpagebuilder/select_page_layout')\n        .then((layouts) => {\n            $(SELECTORS.PAGELAYOUTWRAPPERSEL).empty().append(layouts.pagelayoutjson);\n            return;\n        });\n    };\n\n    /**\n     * JS version of set_config core function.\n     * @param {String} name\n     * @param {Raw} value\n     * @param {String} plugin\n     */\n    // const setConfig = (name, value, plugin = \"\") => {\n    //     Ajax.call([{\n    //         methodname: 'local_edwiserpagebuilder_do_page_action',\n    //         args: {\n    //             action: \"set_config\",\n    //             config: JSON.stringify({\n    //                 'name': name,\n    //                 'value': value,\n    //                 'plugin': plugin\n    //             })\n    //         },\n    //         fail: function(ex) {\n    //             Notification.exception(ex);\n    //         }\n    //     }]);\n    // };\n\n    /**\n     * JS version of unset_config core function.\n     * @param {String} name\n     * @param {String} plugin\n     */\n    // const unsetConfig = (name, plugin = \"\") => {\n    //     Ajax.call([{\n    //         methodname: 'local_edwiserpagebuilder_do_page_action',\n    //         args: {\n    //             action: \"set_config\",\n    //             config: JSON.stringify({\n    //                 'name': name,\n    //                 'value': value,\n    //                 'plugin': plugin\n    //             })\n    //         },\n    //         fail: function(ex) {\n    //             Notification.exception(ex);\n    //         }\n    //     }]);\n    // };\n\n    /**\n     * Fetch all available page layout templates.\n     * templatename if set this function will return rendered html or\n     * it will return encoded Layout list.\n     * @param {String} templatename\n     * @returns {String} Encoded layout list/ Layout cards rendered from templatename\n     */\n    const fetchLayoutTemplates = async(templatename = \"\") => {\n\n        var param = {templatename: templatename};\n\n        const request = {\n            methodname: 'local_edwiserpagebuilder_epb_fetch_layout_templates',\n            args: param\n        };\n\n        return Ajax.call([request])[0];\n    };\n\n    // Create page title modal.\n    const createPageTitleModal = async() => {\n        titlemodal = await ModalFactory.create({\n            title: LANGS[0],\n            body: `\n            <div class=\"addnewpageform\">\n                <div class=\"form-group\">\n                    <label for=\"${SELECTORS.TITLEINPUT}\" class=\"label h-semibold-6\">${LANGS[2]}</label>\n                    <input id=\"${SELECTORS.TITLEINPUT}\" name=\"${SELECTORS.TITLEINPUT}\" class=\"form-control\"/>\n                </div>\n                <button class=\"btn btn-primary btn-disabled float-right ${SELECTORS.NEXTBTN}\" disabled=\"true\">\n                    ${LANGS[1]}\n                    <span class=\"edw-icon edw-icon-Right-Arrow font-size-16\">\n                </button>\n            </div>\n            `,\n        });\n        titlemodal.show();\n    };\n\n    const init = () => {\n        fetchLanguages();\n        registerEvents();\n    };\n\n    const initLayoutSelector = (pageid) => {\n        LANGS = fetchLanguages();\n        var onlylayout = true;\n        setTimeout(() => {\n            openLayoutSelector(\n                function(layoutid) {\n                    addLayoutOnPage(pageid, layoutid);\n                },\n                onlylayout\n            );\n        }, \"1000\");\n\n    };\n\n    const addLayoutOnPage = (pageid, layoutid) => {\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_do_page_action',\n            args: {\n                action: \"edw_publish_page_on_pageid\",\n                config: JSON.stringify({\n                    'pageid': pageid,\n                    'layoutid': layoutid\n                })\n            },\n            done: function(response) {\n                id = JSON.parse(response);\n\n                // Redirect to newly created page.\n                let newUrl = M.cfg.wwwroot + '/local/edwiserpagebuilder/pagedraft.php?id=' + id;\n                window.location.href = newUrl;\n            },\n            fail: function(ex) {\n                Notification.exception(ex);\n            }\n        }]);\n    };\n\n    const registerEvents = () => {\n\n        // Trigger Modal Creation.\n        $(SELECTORS.ADDNEWPAGESEL).on('click', function() {\n            createPageTitleModal();\n        });\n\n        $(document).on('click', SELECTORS.NEXTBTNSEL, function() {\n            var title = $(SELECTORS.TITLEINPUTSEL).val();\n\n            openLayoutSelector(function(layoutid) {\n                createpagefromscratch(title, layoutid);\n            });\n        });\n\n\n\n        // Trigger on keyup for input text field.\n        $(document).on('keyup', SELECTORS.TITLEINPUTSEL, function() {\n            if ($(this).val().length == 0) {\n                $(SELECTORS.NEXTBTNSEL).addClass(\"btn-disabled\").prop('disabled', true);\n            } else {\n                $(SELECTORS.NEXTBTNSEL).removeClass(\"btn-disabled\").prop('disabled', false);\n            }\n        });\n\n        // Tirgger on eye icon for showing preview of layout\n        $(document).on('click', SELECTORS.PREVIEWLAYOUTBTNSEL, function() {\n            let layoutid = $(this).data(\"layoutid\");\n            $(`${SELECTORS.PREVIEWLAYOUT}-${layoutid}`).removeClass(\"d-none\");\n        });\n\n        // Trigger on back button of preview\n        $(document).on('click', SELECTORS.CLOSELAYOUTBTNSEL, function() {\n            let layoutid = $(this).data(\"layoutid\");\n            $(`${SELECTORS.PREVIEWLAYOUT}-${layoutid}`).addClass(\"d-none\");\n        });\n\n    };\n\n    return {\n        init: init,\n        initLayoutSelector: initLayoutSelector\n    };\n});\n"],"names":["define","$","Ajax","Templates","ModalFactory","ModalEvents","str","Notification","SELECTORS","strings","key","component","LANGS","titlemodal","layoutmodal","fetchLanguages","get_strings","then","results","createpagefromscratch","title","layoutid","call","methodname","args","action","config","JSON","stringify","done","response","id","parse","newUrl","M","cfg","wwwroot","window","location","href","fail","ex","exception","addBlankLayoutOnExistingPage","pageid","openLayoutSelector","async","callback","onlylayout","loaderurl","create","type","types","SAVE_CANCEL","body","modal","setButtonText","getActionSelector","addClass","extraclasses","getModal","parent","show","document","on","removeClass","this","data","prop","val","pageclassdata","attr","match","length","getRoot","destroyed","destroy","save","e","fetchLayoutTemplates","layouts","empty","append","pagelayoutjson","templatename","param","request","addLayoutOnPage","registerEvents","createPageTitleModal","init","initLayoutSelector","setTimeout"],"mappings":"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"}