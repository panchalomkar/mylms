{"version":3,"file":"course_progress.min.js","sources":["../../src/remuiblck/course_progress.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-dupe-keys */\n/* eslint-disable camelcase */\n/* eslint-disable max-len */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-empty-function */\n/* eslint-disable promise/catch-or-return */\n/* eslint-disable promise/always-return */\n/* eslint-disable no-undef */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/str',\n    'core_user/repository',\n    'core/modal_save_cancel',\n    'local_edwiserpagebuilder/remuiblck/dataTables.bootstrap4',\n    'local_edwiserpagebuilder/remuiblck/jquery-asPieProgress',\n    'local_edwiserpagebuilder/remuiblck/aspieprogress'\n], function(\n    $,\n    Ajax,\n    Notification,\n    Templates,\n    ModalFactory,\n    ModalEvents,\n    Str,\n    UserRepository\n) {\n    var SELECTORS = {\n        ROOT: '',\n        TABLE: '#DataTables_Teacher',\n        DATA_TABLE: '#DataTables_Teacher_wrapper',\n        STUDENT_PROGRESS_ELEMENT: '.student_progress_ele',\n        STUDENT_PROGRESS_TABLE: '#wdmCourseProgressTable',\n        COURSE_NAME: '.wdm_course_name.has-student',\n        MESSAGE_HIDDEN: '#messageidhidden',\n        MESSAGE_AREA: '#messagearea',\n        TOGGLE_DESCRIPTION: '.epb-toggle-desc',\n        REVERT: '#courserevertbtn',\n        CUSTOM_MESSAGE: '.custom-message',\n        MESSAGE_SEND: '.send-message',\n        BLOCK_PROCESSING: '.block-processing',\n        ALWAYS_LOAD: '#always-load-progress',\n        COURSE_PROGRESSING: '.course-progress-settings',\n        LOAD_COURSE_PROGRESS: '#load-progress',\n        PANEL: '.panel',\n        PANEL_HEADING: '.panel-heading',\n        PANEL_ACTIONS: 'panel-actions',\n        STUDENT_PROOGRESS_VISIBLE: 'student-progress-visible',\n        DATATABLE_HEADER: \"#datatable_header\"\n    };\n\n    var LANGS; // Gloabl variable to store languages.\n\n    // ****** IMPORTANT ******\n    // Do not change the sequence.\n    // If you want to add new strings here, add it at the bottom.\n    // Do not remove any string from the array.\n    // There is no way we can revert back if sequence is changed.\n    // ****** IMPORTANT ******\n    const strings = [\n        {key: 'searchforcourses', component: 'local_edwiserpagebuilder'},\n        {key: 'datatableinfo', component: 'local_edwiserpagebuilder'},\n        {key: 'search', component: 'local_edwiserpagebuilder'},\n        {key: 'alwaysload', component: 'local_edwiserpagebuilder'},\n        {key: 'alwaysloadwarning', component: 'local_edwiserpagebuilder'},\n        {key: 'nomatchingcourses', component: 'core_backup'},\n        {key: 'show', component: 'moodle'},\n        {key: 'entries', component: 'moodle'},\n    ];\n\n    // Functionality to fetch strings.\n    async function fetchLanguages() {\n        await Str.get_strings(strings).then(function(results) {\n            LANGS = results;\n            return results;\n        });\n    }\n\n    // Data object to store local data\n    var DATA = {\n        coursesTable: [],\n        alwaysloadwarning: false\n    };\n\n    var PROMISES = {\n        /**\n         * Get courses using ajax\n         * @param  {String}  search Search query\n         * @param  {Number}  length Number of courses\n         * @param  {Number}  start  Start index of courses\n         * @param  {Array}   order  Sorting order\n         * @param {int} loadProgress\n         * @return {Promise}        Ajax promise\n         */\n        GET_COURSES: function(search, length, start, order, loadProgress) {\n            return Ajax.call([{\n                methodname: 'local_edwiserpagebuilder_remuiblck_action',\n                args: {\n                    action: \"get_course_progress_list\",\n                    config: JSON.stringify({\n                        \"search\": search,\n                        \"length\": length,\n                        \"start\": start,\n                        \"order\": order,\n                        \"loadprogress\": loadProgress\n                    })\n                }\n            }])[0];\n        },\n        /**\n         * Get course progress using course id and ajax\n         * @param  {Number}  courseid Course id\n         * @return {Promise}          Ajax promise\n         */\n        GET_COURSE_PROGRESS: function(courseid) {\n            return Ajax.call([{\n                methodname: 'local_edwiserpagebuilder_remuiblck_action',\n                args: {\n                    action: \"get_course_progress\",\n                    config: JSON.stringify({\n                        \"courseid\": courseid\n                    })\n                }\n            }])[0];\n        },\n        /**\n         * Send message to student using student id and ajax\n         * @param  {Number} studentid   Student id\n         * @param  {String} messagetext Message text\n         * @return {Promise}            Ajax promise\n         */\n        SEND_MESSAGE: function(studentid, messagetext) {\n            return Ajax.call([{\n                methodname: 'local_edwiserpagebuilder_remuiblck_action',\n                args: {\n                    action: \"send_message\",\n                    config: JSON.stringify({\n                        \"studentid\": studentid,\n                        \"messagetext\": messagetext\n                    })\n                }\n            }])[0];\n        }\n    };\n\n    /**\n     * Generate teacher courses table data from ajax response\n     * @param  {Array}  courses Courses list with course details\n     * @return {Object}         Data object\n     */\n    function generate_courses_table_data(courses) {\n        var data = [];\n        courses.forEach(function(course) {\n            var dData = {};\n            dData.index = '<div class=\"w-50\" tabindex=\"0\">' + course.index + '</div>';\n            if (course.enrolledStudents > 0) {\n                dData.course = '<div class=\"wdm_course_name has-student\" data-courseid=\"' + course.id + '\"><a href=\"javascript:void(0)\">' + course.fullname + '</a></div>';\n            } else {\n                dData.course = '<div class=\"wdm_course_name\" data-courseid=\"' + course.id + '\" >' + course.fullname + '</div>';\n            }\n            dData.startdate = course.startdate;\n            dData.students = '<div class=\"w-100\"><span class=\"w-full pl-40\">' + course.enrolledStudents + '</span></div>';\n            if (course.percentage == -1) {\n                dData.progress = '';\n            } else {\n                dData.progress = '<td class=\"w-100 px-10\"><div class=\"pie-progress pie-progress-xs m-0 w-35\" data-plugin=\"pieProgress\" data-valuemax=\"50\" data-barcolor=\"#11c26d\" data-size=\"20\" data-barsize=\"3\" data-goal=\"35\" aria-valuenow=\"' + course.percentage + '\" role=\"progressbar\" style=\"max-width: 35px!important;\"><div class=\"pie-progress-content\" style=\"z-index:2;\"> </div> <span class=\" progress-percent\" style=\"margin-left: 50px;position: absolute;top: 8px;\">' + course.percentage + '%</span> </div></td>';\n            }\n            data.push(dData);\n        });\n        return data;\n    }\n\n    //* ****************\n    // This is code is for table creation on dashboard\n    // this code also toggles between course progress and student progress table\n    // Function createDatatable() creates course progress table\n    /**\n     * @param {DOM} root\n     */\n    function createDatatable(root, uniqid) {\n        DATA.coursesTable[uniqid] = $(root).show().find(SELECTORS.TABLE).DataTable({\n            \"paging\":   true,\n            \"pagingType\": \"simple_numbers\",\n            \"autoWidth\": true,\n            \"scrollX\": true,\n            \"bPaginate\": true,\n            \"bServerSide\": true,\n            language: {\n                searchPlaceholder: M.util.get_string('searchforcourses', 'local_edwiserpagebuilder'),\n                emptyTable: M.util.get_string('nomatchingcourses', 'core_backup'),\n                lengthMenu: M.util.get_string('show', 'moodle') + \" _MENU_ \" + M.util.get_string('entries', 'moodle'),\n                info: M.util.get_string('datatableinfo', 'local_edwiserpagebuilder'),\n                search: M.util.get_string('search', 'local_edwiserpagebuilder') + ':',\n                paginate: {\n                    // First: M.util.get_string('first', 'moodle'),\n                    // previous: M.util.get_string('previous', 'moodle'),\n                    // next: M.util.get_string('next', 'moodle'),\n                    // last: M.util.get_string('last', 'moodle')\n                    first: \"<span class='edw-icon fa fa-angle-left'></span>\",\n                    previous: \"<span class='edw-icon fa fa-angle-left'></span>\",\n                    next: \"<span class='edw-icon fa fa-angle-right'></span>\",\n                    last: \"<span class='edw-icon fa fa-angle-right'></span>\",\n                },\n            },\n            \"ajax\": function(data, callback, settings) {\n                $(root).find(SELECTORS.BLOCK_PROCESSING).addClass('show');\n                let loadCourseProgress = $(root + ' ' + SELECTORS.COURSE_PROGRESSING).is('.load-progress');\n                PROMISES.GET_COURSES(\n                    data.search.value,\n                    data.length,\n                    data.start,\n                    data.order[0],\n                    loadCourseProgress\n                ).done(function(response) {\n                    response = JSON.parse(response);\n                    if (response.recordsTotal == 0) {\n                        response.data = [];\n                        callback(response);\n                        $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                        return;\n                    }\n                    response.data = generate_courses_table_data(response.courses);\n                    callback(response);\n                    $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                }).fail(Notification.exception);\n            },\n            columns: [\n                {data: \"index\"},\n                {data: \"course\"},\n                {data: \"startdate\"},\n                {data: \"students\", \"orderable\": false},\n                {data: \"progress\", \"orderable\": false}\n            ],\n            responsive: true,\n            drawCallback: function(settings) {\n                createPieProgress('', root);\n                $(DATA.coursesTable[uniqid].table().header()).addClass('h-semibold-6');\n            }\n        });\n    }\n\n\n    /**\n     * Create pie progress where div with .pie-progress class is present\n     * @param {String} target\n     */\n    function createPieProgress(target, root) {\n        var element = $(root);\n        if (target != '') {\n            element = element.find(target);\n        }\n        element.find('.pie-progress').asPieProgress({\n            namespace: 'pie-progress',\n            speed: 30,\n            classes: {\n                svg: 'pie-progress-svg',\n                element: 'pie-progress',\n                number: 'pie-progress-number',\n                content: 'pie-progress-content'\n            }\n        });\n    }\n\n    var courseProgressTable;\n    /**\n     * Fetch students course progress data using ajax and display in table format\n     * @param  {int} courseid Course id\n     */\n    function getCourseProgressData(courseid, root) {\n        $(root).find(SELECTORS.BLOCK_PROCESSING).addClass('show');\n        PROMISES.GET_COURSE_PROGRESS(courseid).done(function(response) {\n            response = JSON.parse(response);\n            Templates.render('local_edwiserpagebuilder/remuiblck/course_progress_view', response)\n            .done(function(html, js) {\n                $(root).find(SELECTORS.DATA_TABLE).hide();\n                Templates.replaceNodeContents($(root).find(SELECTORS.STUDENT_PROGRESS_ELEMENT), html, js);\n                createPieProgress(SELECTORS.STUDENT_PROGRESS_ELEMENT, root);\n                courseProgressTable = $(root).find(SELECTORS.STUDENT_PROGRESS_TABLE).DataTable({\n                    \"scrollY\":        \"300px\",\n                    \"scrollCollapse\": true,\n                    \"paging\": false,\n                    \"retrieve\": true,\n                    \"lengthchange\": false,\n                    \"autoWidth\": true,\n                    \"scrollX\": true,\n                    \"search\": \"Fred\",\n                    \"info\": false,\n                    language: {\n                        searchPlaceholder: \"Search\"\n                    },\n                    responsive: true,\n                });\n\n                $(root).find('div.dataTables_filter input').addClass('form-control');\n                $(root).find('div.dataTables_length select').addClass('form-control');\n\n                $(root).addClass(SELECTORS.STUDENT_PROOGRESS_VISIBLE);\n                $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n\n                $('html, body').animate({\n                    scrollTop: $(root).offset().top - 120\n                }, 300);\n            })\n            .fail(function() {\n            });\n        }).fail(function() {\n            $(root).find('div#analysis-chart-area').hide();\n        });\n\n    }\n\n    /**\n     * Send message to user\n     * @param  {int}    studentid Student id\n     * @param  {string} message   Text message\n     */\n    function sendMessageToUser(studentid, message, root) {\n        PROMISES.SEND_MESSAGE(studentid, message)\n        .done(function() {\n            clearModalFields(root);\n            $(root).find('.close-message').click();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            $(root).find('div#analysis-chart-area').hide();\n        });\n    }\n\n    /**\n     * Clear message modal field\n     */\n    function clearModalFields(root) {\n        $(root).find(SELECTORS.MESSAGE_HIDDEN).val('');\n        $(root).find(SELECTORS.MESSAGE_AREA).val('');\n    }\n\n    /**\n     * Toggle always load course progress preference\n     * @param {Boolean} checked If checked course progress will be loaded always\n     */\n    function toggleAlwaysLoading(checked, root, uniqid) {\n        if (typeof rmblckmdlrelease !== 'undefined' && rmblckmdlrelease < '4.3') {\n            M.util.set_user_preference('always-load-progress', checked);\n        } else {\n            UserRepository.setUserPreference('always-load-progress', checked);\n        }\n        $(root).find(SELECTORS.COURSE_PROGRESSING).toggleClass('always-loading', checked);\n        $(root).find(SELECTORS.COURSE_PROGRESSING).toggleClass('load-progress', checked);\n        DATA.coursesTable[uniqid].draw();\n        // DATA.coursesTable[uniqid].draw(false);\n        // $(root).show().find(SELECTORS.TABLE).DataTable().draw();\n    }\n\n    /**\n     * Initialze events for course progress block\n     * @param  {String} root Root container id.\n     */\n    function initializeEvents(root, uniqid) {\n        // Destroy the table and send ajax request\n        $('body').on('click', root + ' ' + SELECTORS.COURSE_NAME, function() {\n            var courseid = $(this).data('courseid');\n            // TeacherViewTable.destroy();\n            getCourseProgressData(courseid, root);\n        })\n\n        // Restore the previous table\n        .on('click', root + ' ' + SELECTORS.REVERT, function() {\n            courseProgressTable.destroy();\n            $(root).find(SELECTORS.STUDENT_PROGRESS_ELEMENT).empty();\n            $(root).find(SELECTORS.DATA_TABLE).show();\n            $(root).removeClass(SELECTORS.STUDENT_PROOGRESS_VISIBLE);\n            $('html, body').animate({\n                scrollTop: $(root).offset().top - 120\n            }, 300);\n        })\n\n        // This block opens modal and sends message to user\n        .on('click', root + ' ' + SELECTORS.CUSTOM_MESSAGE, function() {\n            var studentid = $(this).data('studentid');\n            $(SELECTORS.MESSAGE_HIDDEN).val(studentid);\n        })\n\n        // Send message\n        .on('click', root + ' ' + SELECTORS.MESSAGE_SEND, function() {\n\n            var studentid = $(root).find(SELECTORS.MESSAGE_HIDDEN).val();\n            var message = $(root).find(SELECTORS.MESSAGE_AREA).val();\n            if (message != '') {\n                sendMessageToUser(studentid, message, root);\n            } else {\n                $(SELECTORS.MESSAGE_AREA).focus();\n            }\n        })\n\n        // Toggle description of student progress\n        .on('click', root + ' ' + SELECTORS.TOGGLE_DESCRIPTION, function() {\n            $(this).toggleClass('fa-plus');\n            $(this).toggleClass('fa-minus');\n            $(this).parents(SELECTORS.STUDENT_PROGRESS_ELEMENT).find('.panel-body').toggleClass('show');\n        })\n\n        // Enable course progress always loading\n        .on('change', root + ' ' + SELECTORS.ALWAYS_LOAD, function() {\n            var checkbox = $(this);\n            var checked = $(this).is(':checked');\n            if (!DATA.alwaysloadwarning && checked) {\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: M.util.get_string('alwaysload', 'local_edwiserpagebuilder'),\n                    body: M.util.get_string('alwaysloadwarning', 'local_edwiserpagebuilder')\n                })\n                .then(function(modal) {\n                    var modalRoot = modal.getRoot();\n                    modalRoot.on(ModalEvents.save, function() {\n                        DATA.alwaysloadwarning = true;\n\n                        if (typeof rmblckmdlrelease !== 'undefined' && rmblckmdlrelease < '4.3') {\n                            M.util.set_user_preference('always-load-warning', true);\n                        } else {\n                            UserRepository.setUserPreference('always-load-warning', true);\n                        }\n\n                        toggleAlwaysLoading(checked, root, uniqid);\n                        modal.destroy();\n                    });\n                    modalRoot.on(ModalEvents.cancel, function() {\n                        checkbox.prop('checked', false);\n                    });\n                    modal.show();\n                });\n            } else {\n                toggleAlwaysLoading(checked, root, uniqid);\n            }\n        })\n\n        // Load course progress on click\n        .on('click', root + ' ' + SELECTORS.LOAD_COURSE_PROGRESS, function() {\n            $(root).find(SELECTORS.COURSE_PROGRESSING).addClass('load-progress');\n            // DATA.coursesTable.draw(false);\n            DATA.coursesTable[uniqid].draw();\n            // $(root).show().find(SELECTORS.TABLE).DataTable().draw();\n        });\n\n        // Teacher courses listing table order pieprogress\n        $(root + ' ' + SELECTORS.TABLE).on('order.dt', function() {\n           createPieProgress('', root);\n        });\n\n        // Student progress listing table order pieprogress\n        $(root + ' ' + SELECTORS.STUDENT_PROGRESS_TABLE).on('order.dt', function() {\n           createPieProgress('', root);\n        });\n    }\n\n    /**\n     * Move settings to panel heading\n     * @param  {string} root Root container id\n     */\n    var updateContainers = function(root) {\n        // Move add button panel heading\n        let button = $(root).find(SELECTORS.COURSE_PROGRESSING).detach();\n        let panelHeading = $(root).closest(SELECTORS.PANEL).find(SELECTORS.PANEL_HEADING);\n        let panelActions = $(panelHeading).find('.' + SELECTORS.PANEL_ACTIONS);\n        if (panelActions.length == 0) {\n            panelActions = $('<div class=\"' + SELECTORS.PANEL_ACTIONS + '\"></div>');\n            panelHeading.append(panelActions);\n        }\n        $(root + ' ' + SELECTORS.DATATABLE_HEADER).append(button);\n        button.removeClass('d-none').addClass('d-flex');\n        // $(SELECTORS.DATATABLE_HEADER).find(\"div\").removeClass(\"col-sm-12 col-md-6\").addClass(\"search-show-filter\");\n        let taskProcessing = $(root).find(SELECTORS.BLOCK_PROCESSING).detach();\n        let panel = $(panelHeading).parent(SELECTORS.PANEL);\n        panel.prepend(taskProcessing);\n    };\n\n    /**\n     * Load task on initialisation\n     * @param {DOM}     root          block DOM object\n     * @param {Boolean} alwaysloadwarning If false then always load progress warning will be shown on enabling\n     */\n    var init = async function(root, alwaysloadwarning = false, uniqid = \"1\") {\n        await fetchLanguages();\n        DATA.alwaysloadwarning = alwaysloadwarning;\n        $(document).ready(function() {\n            // UpdateContainers(root);\n            createPieProgress('', root);\n            createDatatable(root, uniqid);\n            updateContainers(root);\n            initializeEvents(root, uniqid);\n        });\n    };\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Ajax","Notification","Templates","ModalFactory","ModalEvents","Str","UserRepository","SELECTORS","strings","key","component","fetchLanguages","get_strings","then","results","courseProgressTable","DATA","coursesTable","alwaysloadwarning","PROMISES","search","length","start","order","loadProgress","call","methodname","args","action","config","JSON","stringify","courseid","studentid","messagetext","createDatatable","root","uniqid","show","find","DataTable","language","searchPlaceholder","M","util","get_string","emptyTable","lengthMenu","info","paginate","first","previous","next","last","data","callback","settings","addClass","loadCourseProgress","is","value","done","response","parse","recordsTotal","removeClass","courses","forEach","course","dData","index","enrolledStudents","id","fullname","startdate","students","percentage","progress","push","generate_courses_table_data","fail","exception","columns","responsive","drawCallback","createPieProgress","table","header","target","element","asPieProgress","namespace","speed","classes","svg","number","content","sendMessageToUser","message","val","clearModalFields","click","ex","hide","toggleAlwaysLoading","checked","rmblckmdlrelease","set_user_preference","setUserPreference","toggleClass","draw","initializeEvents","on","render","html","js","replaceNodeContents","animate","scrollTop","offset","top","getCourseProgressData","this","destroy","empty","focus","parents","checkbox","create","type","types","SAVE_CANCEL","title","body","modal","modalRoot","getRoot","save","cancel","prop","updateContainers","button","detach","panelHeading","closest","panelActions","append","taskProcessing","parent","prepend","init","async","document","ready"],"mappings":"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"}