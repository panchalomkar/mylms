{"version":3,"file":"quizstats.min.js","sources":["../../src/remuiblck/quizstats.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-undef */\ndefine(['local_edwiserpagebuilder/jquery', 'core/ajax', \"core/str\", 'local_edwiserpagebuilder/remuiblck/chartjs'], function($, Ajax, Str) {\n\n    var SELECTORS = {\n        CHART: \"#barChart\",\n        CHART_AREA: '#quiz-chart-area',\n        COURSE_LIST: '#quiz-course-list',\n        QUIZ_LIST: '#quiz-list',\n        LIST_SELECTED: 'option:selected',\n        ERROR: '.quiz-stats-error'\n    };\n\n    // ****** IMPORTANT ******\n    // Do not change the sequence.\n    // If you want to add new strings here, add it at the bottom.\n    // Do not remove any string from the array.\n    // There is no way we can revert back if sequence is changed.\n    // ****** IMPORTANT ******\n    const strings = [\n        {key: 'noofstudents', component: 'local_edwiserpagebuilder'}\n    ];\n\n    var LANGS; // Gloabl variable to store languages.\n\n    // Functionality to fetch strings.\n    // Functionality to fetch strings.\n    async function fetchLanguages() {\n        await Str.get_strings(strings).then(function(results) {\n            LANGS = results;\n            return results;\n        });\n    }\n\n    var barCharts = {};\n\n    var getStepSize = function(datasets) {\n        let max = 0;\n        let current;\n        datasets.forEach(function(data) {\n            current = Math.max.apply(Math, data.data);\n            max = current > max ? current : max;\n        });\n        return Math.ceil(max / 20);\n    };\n\n    /**\n     * \n     */\n\n    function createBarChart(root, uniqid) {\n        var courseId = getSelectedCourseID(root);\n        var quizId = getSelectedQuizID(root);\n\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_remuiblck_action',\n            args: {\n                action: \"get_quiz_participation\",\n                config: JSON.stringify({\n                    \"courseid\": courseId,\n                    \"quizid\": quizId\n                })\n            }\n        }])[0]\n            .done(function(response) {\n                response = JSON.parse(response);\n                if (response.datasets === undefined) {\n                    $(root).find(SELECTORS.CHART_AREA).hide();\n                    $(root).find(SELECTORS.ERROR).show();\n                } else {\n                    if (barCharts[uniqid] && barCharts[uniqid] !== null) {\n                        barCharts[uniqid].destroy();\n                    }\n                    var barcontext = $(root).find(SELECTORS.CHART).get(0).getContext(\"2d\");\n                    barcontext.canvas.height = 400;\n                    var barData = {\n                        labels: response.labels,\n                        datasets: response.datasets\n                    };\n                    barCharts[uniqid] = new Chart(barcontext, {\n                        type: 'bar',\n                        data: barData,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            scales: {\n                                yAxes: [{\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: M.util.get_string('noofstudents', 'local_edwiserpagebuilder'),\n                                        fontColor: '#4C5A73',\n                                    },\n                                    ticks: {\n                                        min: 0,\n                                        stepSize: getStepSize(response.datasets)\n                                    },\n                                    gridLines: {\n                                        drawBorder: false,\n                                    }\n                                }],\n                                xAxes: [{\n                                    gridLines: {\n                                        drawBorder: false,\n                                        display: true,\n                                        borderDash: [8, 4],\n                                        color: \"#EBF0F9\"\n                                    },\n                                    barThickness: 38,\n                                }]\n                            },\n                            legend: {\n                                display: true,\n                                position: 'bottom',\n                                align: 'left',\n                                labels: {\n                                    fontColor: '#4C5A73',\n                                }\n                            }\n                        }\n                    });\n                }\n            })\n            .fail(function() {\n                $(root).find(SELECTORS.CHART_AREA).hide();\n                $(root).find(SELECTORS.ERROR).show();\n            });\n    }\n\n    var getSelectedCourseID = function(root) {\n        return $(root).find(SELECTORS.COURSE_LIST + ' ' + SELECTORS.LIST_SELECTED).data('courseid');\n    };\n    var getSelectedQuizID = function(root) {\n        return $(root).find(SELECTORS.QUIZ_LIST + ' ' + SELECTORS.LIST_SELECTED).data('quizid');\n    };\n    var populateQuizSelector = function(root, uniqid) {\n        var courseId = getSelectedCourseID(root);\n\n        Ajax.call([{\n            methodname: 'local_edwiserpagebuilder_remuiblck_action',\n            args: {\n                action: \"get_quizzes_of_course\",\n                config: JSON.stringify({\n                    \"courseid\": courseId,\n                })\n            }\n        }])[0]\n            .done(function(response) {\n                response = JSON.parse(response);\n                response = Object.values(response);\n                var option = \"\";\n                for (var i = 0; i < response.length; i++) {\n                    option = option + \"<option data-id='\" + response[i].courseid + \"' data-quizid='\" + response[i].quizid + \"'>\";\n                    option = option + response[i].quizname + \"</option>\";\n                }\n\n                $(root).find(SELECTORS.QUIZ_LIST).empty().append(option);\n                createBarChart(root, uniqid);\n            })\n            .fail(function() {\n                $(root).find(SELECTORS.CHART_AREA).hide();\n                $(root).find(SELECTORS.ERROR).show();\n            });\n    };\n    var initEvents = function(root, uniqid) {\n        $(root).find(SELECTORS.COURSE_LIST).on('change', function() {\n            populateQuizSelector(root, uniqid);\n        });\n        $(root).find(SELECTORS.QUIZ_LIST).on('change', function() {\n            createBarChart(root, uniqid);\n        });\n    };\n\n    var init = function(root, uniqid) {\n        $(document).ready(async function() {\n            fetchLanguages();\n            initEvents(root, uniqid);\n            if ($(root).find(SELECTORS.CHART).length) {\n                createBarChart(root, uniqid);\n            }\n        });\n    };\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Ajax","Str","SELECTORS","strings","key","component","barCharts","getStepSize","datasets","current","max","forEach","data","Math","apply","ceil","createBarChart","root","uniqid","courseId","getSelectedCourseID","quizId","getSelectedQuizID","call","methodname","args","action","config","JSON","stringify","done","response","undefined","parse","find","hide","show","destroy","barcontext","get","getContext","canvas","height","barData","labels","Chart","type","options","responsive","maintainAspectRatio","scales","yAxes","scaleLabel","display","labelString","M","util","get_string","fontColor","ticks","min","stepSize","gridLines","drawBorder","xAxes","borderDash","color","barThickness","legend","position","align","fail","initEvents","on","Object","values","option","i","length","courseid","quizid","quizname","empty","append","populateQuizSelector","init","document","ready","async","get_strings","then","results","fetchLanguages"],"mappings":"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"}