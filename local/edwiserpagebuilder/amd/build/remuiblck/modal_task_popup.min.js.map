{"version":3,"file":"modal_task_popup.min.js","sources":["../../src/remuiblck/modal_task_popup.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable camelcase */\ndefine([\n    'jquery',\n    'core/notification',\n    'core/custom_interaction_events',\n    'local_edwiserpagebuilder/remuiblck/modal',\n    'core/modal_registry',\n    'local_edwiserpagebuilder/remuiblck/events'\n], function(\n    $,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    RemuiblckEvents\n) {\n    var registered = false;\n    var SELECTORS = {\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        DELETE_BUTTON: '[data-action=\"delete\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\n        SUBJECT: '[name=\"subject\"]',\n        SUMMARY: '[name=\"summary\"]',\n        DAY: '[name=\"timedue[day]\"]',\n        MONTH: '[name=\"timedue[month]\"]',\n        YEAR: '[name=\"timedue[year]\"]',\n        VISIBLE: '[name=\"visible\"]',\n        NOTIFY: '[name=\"notify\"]',\n        USERS: '[name=\"userlist[]\"]',\n        ELEMENT_ROW: '.fitem',\n        ERROR_FEEDBACK: '.form-control-feedback'\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var TASK = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.SAVE_BUTTON).length) {\n            Notification.exception({\n                message: M.util.get_string('nosavebutton', 'local_edwiserpagebuilder')\n            });\n        }\n\n    };\n\n    TASK.TYPE = 'local_edwiserpagebuilder-task';\n    TASK.prototype = Object.create(Modal.prototype);\n    TASK.prototype.constructor = TASK;\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    TASK.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n        let _this = this;\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function() {\n            // Add your logic for when the save button is clicked. This could include the form validation,\n            // loading animations, error handling etc.\n            _this.getModal().trigger(RemuiblckEvents.TASK_SAVE);\n        });\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.DELETE_BUTTON, function() {\n            // Add your logic for when the delete button is clicked.\n            _this.getModal().trigger(RemuiblckEvents.TASK_DELETE);\n        });\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function() {\n            // Add your logic for when the delete button is clicked.\n            _this.getModal().trigger(RemuiblckEvents.TASK_CANCEL);\n        });\n\n    };\n\n    /**\n     * Check whether settings are valid or not\n     * @return {bool} True if valid\n     */\n    TASK.prototype.valid_settings = function() {\n        let valid = true;\n        let subject = this.getModal().find(SELECTORS.SUBJECT).val();\n        valid = subject != '';\n        this.getModal().find(SELECTORS.SUBJECT)[0].dispatchEvent(new CustomEvent('blur'));\n        return valid;\n    };\n\n\n    /**\n     * Get settings entered in task form\n     * @return {object} task settings object\n     */\n    TASK.prototype.get_task_settings = function() {\n        // \"2012-03-29T23:59:59\"\n\n        var get_date = function(modal) {\n            let datetime = modal.find(SELECTORS.YEAR).val();\n            let month = modal.find(SELECTORS.MONTH).val();\n            let day = modal.find(SELECTORS.DAY).val();\n            datetime += '-' + (month < 10 ? '0' + month : month); // Month convert -> 8 to 08\n            datetime += '-' + (day < 10 ? '0' + day : day);\n            datetime += navigator.vendor.indexOf(\"Apple\") != -1 ? 'T23:59:59' : ' 23:59:59';\n            return (navigator.vendor.indexOf(\"Apple\") != -1 ? Date.parse(datetime) : new Date(datetime).getTime()) / 1000;\n        };\n        let settings = {\n            subject: this.getModal().find(SELECTORS.SUBJECT).val(),\n            summary: this.getModal().find(SELECTORS.SUMMARY).val(),\n            timedue: get_date(this.getModal()),\n            visible: this.getModal().find(SELECTORS.VISIBLE).is(':checked'),\n            notify: this.getModal().find(SELECTORS.NOTIFY).is(':checked'),\n            users: this.getModal().find(SELECTORS.USERS).val()\n        };\n        return settings;\n    };\n\n    /**\n     * Change saving button status\n     */\n    TASK.prototype.saving = function() {\n\n        var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        let button = this.getModal().find(SELECTORS.SAVE_BUTTON);\n        if (action == true) {\n            button.text(M.util.get_string('saving', 'core_repository')).attr('disabled', 'disabled');\n            button.attr('disabled', true);\n            return;\n        }\n        button.attr('disabled', false);\n        button.text(M.util.get_string('save', 'core_repository')).removeAttr('disabled');\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(TASK.TYPE, TASK, 'local_edwiserpagebuilder/remuiblck/modal_task_popup');\n        registered = true;\n    }\n\n    return TASK;\n});\n"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","RemuiblckEvents","registered","SELECTORS","TASK","root","call","this","getFooter","find","length","exception","message","M","util","get_string","TYPE","prototype","Object","create","constructor","registerEventListeners","_this","getModal","on","events","activate","trigger","TASK_SAVE","TASK_DELETE","TASK_CANCEL","valid_settings","valid","val","dispatchEvent","CustomEvent","get_task_settings","subject","summary","timedue","modal","datetime","month","day","navigator","vendor","indexOf","Date","parse","getTime","get_date","visible","is","notify","users","saving","action","arguments","undefined","button","text","attr","removeAttr","register"],"mappings":"AAEAA,6DAAO,CACH,SACA,oBACA,iCACA,2CACA,sBACA,8CACD,SACCC,EACAC,aACAC,aACAC,MACAC,cACAC,qBAEIC,YAAa,EACbC,sBACa,uBADbA,wBAEe,yBAFfA,wBAGe,yBAHfA,kBAIS,mBAJTA,kBAKS,mBALTA,cAMK,wBANLA,gBAOO,0BAPPA,eAQM,yBARNA,kBASS,mBATTA,iBAUQ,kBAVRA,gBAWO,sBAUPC,KAAO,SAASC,MAChBN,MAAMO,KAAKC,KAAMF,MAEZE,KAAKC,YAAYC,KAAKN,uBAAuBO,QAC9Cb,aAAac,UAAU,CACnBC,QAASC,EAAEC,KAAKC,WAAW,eAAgB,sCAMvDX,KAAKY,KAAO,iCACZZ,KAAKa,UAAYC,OAAOC,OAAOpB,MAAMkB,YACtBG,YAAchB,KAO7BA,KAAKa,UAAUI,uBAAyB,WAEpCtB,MAAMkB,UAAUI,uBAAuBf,KAAKC,UACxCe,MAAQf,UACPgB,WAAWC,GAAG1B,aAAa2B,OAAOC,SAAUvB,uBAAuB,WAGpEmB,MAAMC,WAAWI,QAAQ1B,gBAAgB2B,mBAGxCL,WAAWC,GAAG1B,aAAa2B,OAAOC,SAAUvB,yBAAyB,WAEtEmB,MAAMC,WAAWI,QAAQ1B,gBAAgB4B,qBAGxCN,WAAWC,GAAG1B,aAAa2B,OAAOC,SAAUvB,yBAAyB,WAEtEmB,MAAMC,WAAWI,QAAQ1B,gBAAgB6B,iBASjD1B,KAAKa,UAAUc,eAAiB,eACxBC,OAAQ,SAEZA,MAAmB,IADLzB,KAAKgB,WAAWd,KAAKN,mBAAmB8B,WAEjDV,WAAWd,KAAKN,mBAAmB,GAAG+B,cAAc,IAAIC,YAAY,SAClEH,OAQX5B,KAAKa,UAAUmB,kBAAoB,iBAYhB,CACXC,QAAS9B,KAAKgB,WAAWd,KAAKN,mBAAmB8B,MACjDK,QAAS/B,KAAKgB,WAAWd,KAAKN,mBAAmB8B,MACjDM,QAZW,SAASC,WAChBC,SAAWD,MAAM/B,KAAKN,gBAAgB8B,MACtCS,MAAQF,MAAM/B,KAAKN,iBAAiB8B,MACpCU,IAAMH,MAAM/B,KAAKN,eAAe8B,aACpCQ,UAAY,KAAOC,MAAQ,GAAK,IAAMA,MAAQA,OAC9CD,UAAY,KAAOE,IAAM,GAAK,IAAMA,IAAMA,KAC1CF,WAAkD,GAAtCG,UAAUC,OAAOC,QAAQ,SAAiB,YAAc,cACtB,GAAtCF,UAAUC,OAAOC,QAAQ,SAAiBC,KAAKC,MAAMP,UAAY,IAAIM,KAAKN,UAAUQ,WAAa,IAKhGC,CAAS3C,KAAKgB,YACvB4B,QAAS5C,KAAKgB,WAAWd,KAAKN,mBAAmBiD,GAAG,YACpDC,OAAQ9C,KAAKgB,WAAWd,KAAKN,kBAAkBiD,GAAG,YAClDE,MAAO/C,KAAKgB,WAAWd,KAAKN,iBAAiB8B,QAQrD7B,KAAKa,UAAUsC,OAAS,eAEhBC,SAASC,UAAU/C,OAAS,QAAsBgD,IAAjBD,UAAU,KAAmBA,UAAU,OAExEE,OAASpD,KAAKgB,WAAWd,KAAKN,0BACpB,GAAVqD,cACAG,OAAOC,KAAK/C,EAAEC,KAAKC,WAAW,SAAU,oBAAoB8C,KAAK,WAAY,iBAC7EF,OAAOE,KAAK,YAAY,GAG5BF,OAAOE,KAAK,YAAY,GACxBF,OAAOC,KAAK/C,EAAEC,KAAKC,WAAW,OAAQ,oBAAoB+C,WAAW,aAKpE5D,aACDF,cAAc+D,SAAS3D,KAAKY,KAAMZ,KAAM,uDACxCF,YAAa,GAGVE"}