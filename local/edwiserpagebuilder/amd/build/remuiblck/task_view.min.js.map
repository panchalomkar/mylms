{"version":3,"file":"task_view.min.js","sources":["../../src/remuiblck/task_view.js"],"sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable no-unused-vars */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/fragment',\n    'local_edwiserpagebuilder/remuiblck/modal_task_popup',\n    'local_edwiserpagebuilder/remuiblck/events'\n], function(\n    $,\n    ajax,\n    Notification,\n    Templates,\n    ModalFactory,\n    ModalEvents,\n    Fragment,\n    ModalTaskPopup,\n    RemuiblckEvents\n) {\n    var SELECTORS = {\n        TASK_CONTAINER: '[data-region=\"task-list\"]',\n        PANEL: '.panel',\n        TASK_PROCESSING: '.task-processing',\n        SHEDULE_TASK_BTN: '.filters [data-region=\"add-schedule-task\"]'\n    };\n    var TEMPLATES = {\n        TASK_LIST_ITEMS: 'local_edwiserpagebuilder/remuiblck/task-list-items'\n    };\n    var PROMISES = {\n        /**\n         * Get user tasks promise call\n         * @param  {String} duration duration selection\n         * @param  {String} status   status selection\n         * @param  {String} search   status selection\n         * @return {String} ajax promise\n         */\n        GET_USER_TASKS: function(duration, status, search) {\n            return ajax.call([{\n                methodname: 'local_edwiserpagebuilder_remuiblck_action',\n                args: {\n                    action: \"get_user_tasks\",\n                    config: JSON.stringify({\n                        \"duration\": duration,\n                        \"status\": status,\n                        \"search\": search\n                    })\n                }\n            }])[0];\n        }\n    };\n\n    /**\n     * Load task in the tasks list\n     * @param {DOM} root object\n     */\n    var loadTasks = function(root) {\n\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'today';\n        var status = arguments.length > 1 && arguments[2] !== undefined ? arguments[2] : 'all';\n        var search = arguments.length > 1 && arguments[3] !== undefined ? arguments[3] : '';\n\n        PROMISES.GET_USER_TASKS(duration, status, search).done(function(response) {\n            response = JSON.parse(response);\n            // response = Object.values(response);\n            response.tasks = Object.values(response.tasks);\n\n\n            if (response.tasks.length == 0) {\n                response.no_tasks_image = M.util.image_url('empty_task_list', 'local_edwiserpagebuilder');\n                $(root + \" \" + SELECTORS.SHEDULE_TASK_BTN).addClass(\"d-none\");\n            } else {\n                $(root + \" \" + SELECTORS.SHEDULE_TASK_BTN).removeClass(\"d-none\");\n            }\n\n            var output = Templates.render(TEMPLATES.TASK_LIST_ITEMS, response);\n\n            output.done(function(html) {\n                $(root).find(SELECTORS.TASK_CONTAINER).html(html);\n                toggleTaskProcessing(root);\n            }).fail(function(ex) {\n                Notification.exception(ex);\n                toggleTaskProcessing(root);\n            });\n        }).fail(function(ex) {\n            Notification.exception(ex);\n            toggleTaskProcessing(root);\n        });\n    };\n\n    /**\n     * Load task on initialisation\n     * @param {DOM} root block DOM object\n     */\n    var init = function(root) {\n        loadTasks(root);\n    };\n\n    /**\n     * Toggle processing overlay to show that something happening in the background\n     * @param  {Dom} root\n     */\n    var toggleTaskProcessing = function(root) {\n        var show = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        $(root).parents(SELECTORS.PANEL).find(SELECTORS.TASK_PROCESSING).toggleClass('show', show);\n    };\n    return {\n        init: init,\n        loadTasks: loadTasks,\n        toggleTaskProcessing: toggleTaskProcessing\n    };\n});\n"],"names":["define","$","ajax","Notification","Templates","ModalFactory","ModalEvents","Fragment","ModalTaskPopup","RemuiblckEvents","SELECTORS","TEMPLATES","PROMISES","duration","status","search","call","methodname","args","action","config","JSON","stringify","loadTasks","root","arguments","length","undefined","done","response","parse","tasks","Object","values","no_tasks_image","M","util","image_url","addClass","removeClass","render","html","find","toggleTaskProcessing","fail","ex","exception","show","parents","toggleClass","init"],"mappings":"AAGAA,sDAAO,CACH,SACA,YACA,oBACA,iBACA,qBACA,oBACA,gBACA,sDACA,8CACD,SACCC,EACAC,KACAC,aACAC,UACAC,aACAC,YACAC,SACAC,eACAC,qBAEIC,yBACgB,4BADhBA,gBAEO,SAFPA,0BAGiB,mBAHjBA,2BAIkB,6CAElBC,0BACiB,qDAEjBC,wBAQgB,SAASC,SAAUC,OAAQC,eAChCb,KAAKc,KAAK,CAAC,CACdC,WAAY,4CACZC,KAAM,CACFC,OAAQ,iBACRC,OAAQC,KAAKC,UAAU,UACPT,gBACFC,cACAC,aAGlB,IAQRQ,UAAY,SAASC,UAEjBX,SAAWY,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,QAC/EX,OAASW,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,MAC7EV,OAASU,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAEjFb,wBAAwBC,SAAUC,OAAQC,QAAQa,MAAK,SAASC,WAC5DA,SAAWR,KAAKS,MAAMD,WAEbE,MAAQC,OAAOC,OAAOJ,SAASE,OAGX,GAAzBF,SAASE,MAAML,QACfG,SAASK,eAAiBC,EAAEC,KAAKC,UAAU,kBAAmB,4BAC9DpC,EAAEuB,KAAO,IAAMd,4BAA4B4B,SAAS,WAEpDrC,EAAEuB,KAAO,IAAMd,4BAA4B6B,YAAY,UAG9CnC,UAAUoC,OAAO7B,0BAA2BkB,UAElDD,MAAK,SAASa,MACjBxC,EAAEuB,MAAMkB,KAAKhC,0BAA0B+B,KAAKA,MAC5CE,qBAAqBnB,SACtBoB,MAAK,SAASC,IACb1C,aAAa2C,UAAUD,IACvBF,qBAAqBnB,YAE1BoB,MAAK,SAASC,IACb1C,aAAa2C,UAAUD,IACvBF,qBAAqBnB,UAgBzBmB,qBAAuB,SAASnB,UAC5BuB,KAAOtB,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,IAAmBA,UAAU,GAC1ExB,EAAEuB,MAAMwB,QAAQtC,iBAAiBgC,KAAKhC,2BAA2BuC,YAAY,OAAQF,aAElF,CACHG,KAbO,SAAS1B,MAChBD,UAAUC,OAaVD,UAAWA,UACXoB,qBAAsBA"}